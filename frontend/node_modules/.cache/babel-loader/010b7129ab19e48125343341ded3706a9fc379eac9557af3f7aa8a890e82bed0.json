{"ast":null,"code":"import api from './api';\nexport const chatService = {\n  getMessages: async receiverId => {\n    const response = await api.get(`/v1/chat/messages/${receiverId}`);\n    return response.data;\n  },\n  sendMessage: async (receiverId, content) => {\n    const response = await api.post('/v1/chat/send', {\n      receiverId,\n      content\n    });\n    return response.data;\n  },\n  markAsRead: async messageId => {\n    const response = await api.put(`/v1/chat/read/${messageId}`);\n    return response.data;\n  },\n  getActiveUsers: async () => {\n    const response = await api.get('/v1/users/active');\n    return response.data;\n  },\n  getConversations: async () => {\n    const response = await api.get('/v1/chat/conversations');\n    return response.data;\n  }\n};\nexport default chatService;","map":{"version":3,"names":["api","chatService","getMessages","receiverId","response","get","data","sendMessage","content","post","markAsRead","messageId","put","getActiveUsers","getConversations"],"sources":["C:/Users/trann/Desktop/jwt-bt/frontend/src/services/chatService.ts"],"sourcesContent":["import api from './api';\r\nimport { Message, User } from '../types';\r\n\r\nexport const chatService = {\r\n  getMessages: async (receiverId: string) => {\r\n    const response = await api.get(`/v1/chat/messages/${receiverId}`);\r\n    return response.data;\r\n  },\r\n\r\n  sendMessage: async (receiverId: string, content: string) => {\r\n    const response = await api.post('/v1/chat/send', {\r\n      receiverId,\r\n      content\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  markAsRead: async (messageId: string) => {\r\n    const response = await api.put(`/v1/chat/read/${messageId}`);\r\n    return response.data;\r\n  },\r\n\r\n  getActiveUsers: async () => {\r\n    const response = await api.get('/v1/users/active');\r\n    return response.data;\r\n  },\r\n\r\n  getConversations: async () => {\r\n    const response = await api.get('/v1/chat/conversations');\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default chatService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB,OAAO,MAAMC,WAAW,GAAG;EACzBC,WAAW,EAAE,MAAOC,UAAkB,IAAK;IACzC,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,qBAAqBF,UAAU,EAAE,CAAC;IACjE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,WAAW,EAAE,MAAAA,CAAOJ,UAAkB,EAAEK,OAAe,KAAK;IAC1D,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACS,IAAI,CAAC,eAAe,EAAE;MAC/CN,UAAU;MACVK;IACF,CAAC,CAAC;IACF,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDI,UAAU,EAAE,MAAOC,SAAiB,IAAK;IACvC,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAACY,GAAG,CAAC,iBAAiBD,SAAS,EAAE,CAAC;IAC5D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDO,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,kBAAkB,CAAC;IAClD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDQ,gBAAgB,EAAE,MAAAA,CAAA,KAAY;IAC5B,MAAMV,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,wBAAwB,CAAC;IACxD,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}