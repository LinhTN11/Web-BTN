{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trann\\\\Desktop\\\\jwt-bt\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { userAPI, authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [adminData, setAdminData] = useState({\n    users: [],\n    lastFetched: 0\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const refreshUserData = async () => {\n    try {\n      const currentUser = await userAPI.getCurrentUser();\n      if (currentUser) {\n        setUser(currentUser);\n        localStorage.setItem('user', JSON.stringify(currentUser));\n      }\n    } catch (error) {\n      console.error('Error refreshing user data:', error);\n    }\n  };\n\n  // Initialize auth state\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const savedUser = localStorage.getItem('user');\n        const savedToken = localStorage.getItem('token');\n        if (savedUser && savedToken) {\n          const parsedUser = JSON.parse(savedUser);\n          setUser(parsedUser);\n          setIsAuthenticated(true);\n\n          // Refresh user data\n          await refreshUserData();\n\n          // If admin, preload admin data\n          if (parsedUser.role === 'admin') {\n            await preloadAdminData();\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n  const preloadAdminData = async () => {\n    try {\n      const now = Date.now();\n      if (now - adminData.lastFetched < CACHE_DURATION && adminData.users.length > 0) {\n        return;\n      }\n      const users = await userAPI.getAllUsers();\n      if (Array.isArray(users)) {\n        setAdminData({\n          users,\n          lastFetched: now\n        });\n      }\n    } catch (error) {\n      console.error('Error preloading admin data:', error);\n      throw error;\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await authAPI.login({\n        username,\n        password\n      });\n      if (!response.user || !response.accessToken) {\n        throw new Error('Invalid response data');\n      }\n\n      // Set auth state\n      setUser(response.user);\n      setIsAuthenticated(true);\n\n      // Save to localStorage\n      localStorage.setItem('user', JSON.stringify(response.user));\n      localStorage.setItem('token', response.accessToken);\n\n      // If admin, preload data\n      if (response.user.role === 'admin') {\n        await preloadAdminData();\n      }\n      return response.user;\n    } catch (error) {\n      console.error('Error during login:', error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Error during logout:', error);\n    } finally {\n      setUser(null);\n      setIsAuthenticated(false);\n      setAdminData({\n        users: [],\n        lastFetched: 0\n      });\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n    }\n  };\n  const refreshUsers = async () => {\n    if ((user === null || user === void 0 ? void 0 : user.role) === 'admin') {\n      await preloadAdminData();\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    adminData: adminData.users,\n    isLoading,\n    login,\n    logout,\n    refreshUsers,\n    refreshUserData\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Z35WIvsj+rTWrERbJvP6vMUKvGM=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","userAPI","authAPI","jsxDEV","_jsxDEV","CACHE_DURATION","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","adminData","setAdminData","users","lastFetched","isLoading","setIsLoading","refreshUserData","currentUser","getCurrentUser","localStorage","setItem","JSON","stringify","error","console","initializeAuth","savedUser","getItem","savedToken","parsedUser","parse","role","preloadAdminData","removeItem","now","Date","length","getAllUsers","Array","isArray","login","username","password","response","accessToken","Error","logout","refreshUsers","value","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/trann/Desktop/jwt-bt/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { User, AuthContextType } from '../types';\r\nimport { userAPI, authAPI } from '../services/api';\r\n\r\ninterface AdminData {\r\n  users: User[];\r\n  lastFetched: number;\r\n}\r\n\r\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [adminData, setAdminData] = useState<AdminData>({ users: [], lastFetched: 0 });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const refreshUserData = async () => {\r\n    try {\r\n      const currentUser = await userAPI.getCurrentUser();\r\n      if (currentUser) {\r\n        setUser(currentUser);\r\n        localStorage.setItem('user', JSON.stringify(currentUser));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error refreshing user data:', error);\r\n    }\r\n  };\r\n\r\n  // Initialize auth state\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      try {\r\n        const savedUser = localStorage.getItem('user');\r\n        const savedToken = localStorage.getItem('token');\r\n        \r\n        if (savedUser && savedToken) {\r\n          const parsedUser = JSON.parse(savedUser);\r\n          setUser(parsedUser);\r\n          setIsAuthenticated(true);\r\n\r\n          // Refresh user data\r\n          await refreshUserData();\r\n          \r\n          // If admin, preload admin data\r\n          if (parsedUser.role === 'admin') {\r\n            await preloadAdminData();\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing auth:', error);\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const preloadAdminData = async () => {\r\n    try {\r\n      const now = Date.now();\r\n      if (now - adminData.lastFetched < CACHE_DURATION && adminData.users.length > 0) {\r\n        return;\r\n      }\r\n\r\n      const users = await userAPI.getAllUsers();\r\n      if (Array.isArray(users)) {\r\n        setAdminData({\r\n          users,\r\n          lastFetched: now\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error preloading admin data:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      const response = await authAPI.login({ username, password });\r\n      \r\n      if (!response.user || !response.accessToken) {\r\n        throw new Error('Invalid response data');\r\n      }\r\n\r\n      // Set auth state\r\n      setUser(response.user);\r\n      setIsAuthenticated(true);\r\n      \r\n      // Save to localStorage\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n      localStorage.setItem('token', response.accessToken);\r\n\r\n      // If admin, preload data\r\n      if (response.user.role === 'admin') {\r\n        await preloadAdminData();\r\n      }\r\n\r\n      return response.user;\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authAPI.logout();\r\n    } catch (error) {\r\n      console.error('Error during logout:', error);\r\n    } finally {\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n      setAdminData({ users: [], lastFetched: 0 });\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('token');\r\n    }\r\n  };\r\n\r\n  const refreshUsers = async () => {\r\n    if (user?.role === 'admin') {\r\n      await preloadAdminData();\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    adminData: adminData.users,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    refreshUsers,\r\n    refreshUserData\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}