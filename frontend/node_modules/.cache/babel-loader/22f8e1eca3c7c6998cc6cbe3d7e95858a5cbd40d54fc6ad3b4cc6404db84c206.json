{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trann\\\\Desktop\\\\jwt-bt\\\\frontend\\\\src\\\\Components\\\\Chat\\\\OptimizedMessengerChatPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Card, Typography, Input, Button, List, Avatar, Space, Divider, Badge, Row, Col, Skeleton, Empty } from 'antd';\nimport { SendOutlined, UserOutlined, MessageOutlined } from '@ant-design/icons';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useChat } from '../../contexts/ChatContext';\nimport socketService from '../../services/socketService';\nimport './MessengerChatPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst {\n  TextArea\n} = Input;\nconst OptimizedMessengerChatPage = () => {\n  _s();\n  const {\n    user,\n    token\n  } = useAuth();\n  const {\n    activeUsers,\n    messagesByConversation,\n    isLoadingUsers,\n    isLoadingMessages,\n    selectedUser,\n    setSelectedUser,\n    loadMessages,\n    refreshActiveUsers,\n    sendMessage,\n    addMessage,\n    markAsRead\n  } = useChat();\n  const [message, setMessage] = useState('');\n  const [typing, setTyping] = useState({});\n  const typingTimeoutRef = useRef({});\n  const messagesEndRef = useRef(null);\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sending, setSending] = useState(false);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Auto-scroll when messages change\n  useEffect(() => {\n    var _messagesByConversati;\n    if (selectedUser && ((_messagesByConversati = messagesByConversation[selectedUser._id]) === null || _messagesByConversati === void 0 ? void 0 : _messagesByConversati.length) > 0) {\n      scrollToBottom();\n    }\n  }, [selectedUser, messagesByConversation]);\n\n  // Socket connection and event handlers\n  useEffect(() => {\n    if (token && !socketConnected) {\n      const socket = socketService.connect(`Bearer ${token}`);\n      if (socket) {\n        socket.on('connect', () => {\n          console.log('Socket connected successfully');\n          setSocketConnected(true);\n          refreshActiveUsers();\n        });\n        socket.on('reconnect', () => {\n          console.log('Socket reconnected successfully');\n          setSocketConnected(true);\n          refreshActiveUsers();\n        });\n        socket.on('disconnect', () => {\n          console.log('Socket disconnected');\n          setSocketConnected(false);\n        });\n        socket.on('newMessage', newMessage => {\n          console.log('Received new message:', newMessage);\n          addMessage(newMessage);\n          scrollToBottom();\n        });\n        socket.on('userTyping', ({\n          userId,\n          isTyping\n        }) => {\n          setTyping(prev => ({\n            ...prev,\n            [userId]: isTyping\n          }));\n          if (isTyping) {\n            if (typingTimeoutRef.current[userId]) {\n              clearTimeout(typingTimeoutRef.current[userId]);\n            }\n            typingTimeoutRef.current[userId] = setTimeout(() => {\n              setTyping(prev => ({\n                ...prev,\n                [userId]: false\n              }));\n            }, 3000);\n          }\n        });\n        socket.on('userOnline', userData => {\n          console.log('User came online:', userData);\n          refreshActiveUsers();\n        });\n        socket.on('userOffline', userData => {\n          console.log('User went offline:', userData);\n          refreshActiveUsers();\n        });\n      }\n    }\n    return () => {\n      const currentTimeouts = typingTimeoutRef.current;\n      Object.values(currentTimeouts).forEach(timeout => {\n        clearTimeout(timeout);\n      });\n    };\n  }, [token, socketConnected, refreshActiveUsers, addMessage]);\n\n  // Load messages when user is selected\n  useEffect(() => {\n    if (selectedUser) {\n      loadMessages(selectedUser._id);\n      markAsRead(selectedUser._id);\n    }\n  }, [selectedUser, loadMessages, markAsRead]);\n  const handleSendMessage = async () => {\n    if (!message.trim() || !selectedUser || sending) return;\n    const messageContent = message.trim();\n    setMessage('');\n    setSending(true);\n    try {\n      await sendMessage(selectedUser._id, messageContent);\n\n      // Emit socket event for real-time\n      const socket = socketService.getSocket();\n      if (socket) {\n        socket.emit('sendMessage', {\n          receiverId: selectedUser._id,\n          content: messageContent\n        });\n      }\n      scrollToBottom();\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessage(messageContent); // Restore message on error\n    } finally {\n      setSending(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleTyping = () => {\n    if (selectedUser) {\n      const socket = socketService.getSocket();\n      if (socket) {\n        socket.emit('typing', {\n          receiverId: selectedUser._id,\n          isTyping: true\n        });\n      }\n    }\n  };\n  const filteredUsers = activeUsers.filter(u => u.username.toLowerCase().includes(searchQuery.toLowerCase()));\n  const currentMessages = selectedUser ? messagesByConversation[selectedUser._id] || [] : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messenger-chat-page\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      style: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 24,\n        md: 8,\n        lg: 6,\n        xl: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Tin nh\\u1EAFn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), socketConnected && /*#__PURE__*/_jsxDEV(Badge, {\n              status: \"success\",\n              text: \"Online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this),\n          className: \"users-list-card\",\n          bodyStyle: {\n            padding: '12px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input.Search, {\n            placeholder: \"T\\xECm ki\\u1EBFm ng\\u01B0\\u1EDDi d\\xF9ng...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            style: {\n              marginBottom: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), isLoadingUsers ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [1, 2, 3].map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 16\n              },\n              children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                avatar: true,\n                active: true,\n                paragraph: {\n                  rows: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this) : filteredUsers.length === 0 ? /*#__PURE__*/_jsxDEV(Empty, {\n            description: \"Kh\\xF4ng c\\xF3 ng\\u01B0\\u1EDDi d\\xF9ng n\\xE0o\",\n            image: Empty.PRESENTED_IMAGE_SIMPLE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(List, {\n            dataSource: filteredUsers,\n            renderItem: chatUser => /*#__PURE__*/_jsxDEV(List.Item, {\n              onClick: () => setSelectedUser(chatUser),\n              className: `user-item ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) === chatUser._id ? 'active' : ''}`,\n              style: {\n                cursor: 'pointer',\n                padding: '12px',\n                borderRadius: '8px',\n                marginBottom: '4px',\n                backgroundColor: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) === chatUser._id ? '#e6f7ff' : 'transparent'\n              },\n              children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                avatar: /*#__PURE__*/_jsxDEV(Badge, {\n                  dot: chatUser.isOnline,\n                  color: \"green\",\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 35\n                    }, this),\n                    src: chatUser.avatar,\n                    size: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 25\n                }, this),\n                title: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    strong: true,\n                    children: chatUser.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 27\n                  }, this), typing[chatUser._id] && /*#__PURE__*/_jsxDEV(Text, {\n                    type: \"secondary\",\n                    style: {\n                      fontSize: '12px'\n                    },\n                    children: \"\\u0111ang nh\\u1EADp...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 25\n                }, this),\n                description: /*#__PURE__*/_jsxDEV(Text, {\n                  type: \"secondary\",\n                  style: {\n                    fontSize: '12px'\n                  },\n                  children: chatUser.isOnline ? 'Đang hoạt động' : `Hoạt động lần cuối: ${chatUser.lastActive ? new Date(chatUser.lastActive).toLocaleString('vi-VN') : 'Không xác định'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this)\n            }, chatUser._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 24,\n        md: 16,\n        lg: 18,\n        xl: 18,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: selectedUser ? /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(Badge, {\n              dot: selectedUser.isOnline,\n              color: \"green\",\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 29\n                }, this),\n                src: selectedUser.avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: selectedUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                type: \"secondary\",\n                style: {\n                  fontSize: '12px'\n                },\n                children: selectedUser.isOnline ? 'Đang hoạt động' : 'Không hoạt động'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this) : 'Chọn một cuộc trò chuyện',\n          className: \"chat-area-card\",\n          bodyStyle: {\n            padding: 0,\n            height: 'calc(100vh - 200px)',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: !selectedUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: '100%',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {\n              style: {\n                fontSize: '48px',\n                color: '#d9d9d9'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              type: \"secondary\",\n              style: {\n                marginTop: '16px'\n              },\n              children: \"Ch\\u1ECDn m\\u1ED9t cu\\u1ED9c tr\\xF2 chuy\\u1EC7n \\u0111\\u1EC3 b\\u1EAFt \\u0111\\u1EA7u nh\\u1EAFn tin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages-container\",\n              style: {\n                flex: 1,\n                overflowY: 'auto',\n                padding: '16px',\n                maxHeight: 'calc(100vh - 300px)'\n              },\n              children: [isLoadingMessages ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [1, 2, 3].map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: 16\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                    avatar: true,\n                    active: true,\n                    paragraph: {\n                      rows: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 27\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 21\n              }, this) : currentMessages.length === 0 ? /*#__PURE__*/_jsxDEV(Empty, {\n                description: \"Ch\\u01B0a c\\xF3 tin nh\\u1EAFn n\\xE0o\",\n                image: Empty.PRESENTED_IMAGE_SIMPLE\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 21\n              }, this) : currentMessages.map((msg, index) => {\n                var _currentMessages, _currentMessages2, _currentMessages3, _currentMessages3$sen;\n                const senderId = typeof msg.sender === 'string' ? msg.sender : msg.sender._id;\n                const senderInfo = typeof msg.sender === 'string' ? null : msg.sender;\n                const isCurrentUser = senderId === (user === null || user === void 0 ? void 0 : user._id);\n                const showAvatar = index === 0 || (typeof ((_currentMessages = currentMessages[index - 1]) === null || _currentMessages === void 0 ? void 0 : _currentMessages.sender) === 'string' ? ((_currentMessages2 = currentMessages[index - 1]) === null || _currentMessages2 === void 0 ? void 0 : _currentMessages2.sender) !== senderId : ((_currentMessages3 = currentMessages[index - 1]) === null || _currentMessages3 === void 0 ? void 0 : (_currentMessages3$sen = _currentMessages3.sender) === null || _currentMessages3$sen === void 0 ? void 0 : _currentMessages3$sen._id) !== senderId);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `message-item ${isCurrentUser ? 'sent' : 'received'}`,\n                  style: {\n                    display: 'flex',\n                    marginBottom: '12px',\n                    justifyContent: isCurrentUser ? 'flex-end' : 'flex-start'\n                  },\n                  children: [!isCurrentUser && /*#__PURE__*/_jsxDEV(Avatar, {\n                    icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 37\n                    }, this),\n                    src: msg.sender.avatar,\n                    size: \"small\",\n                    style: {\n                      marginRight: '8px',\n                      visibility: showAvatar ? 'visible' : 'hidden'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-content\",\n                    style: {\n                      maxWidth: '70%',\n                      padding: '8px 12px',\n                      borderRadius: '12px',\n                      backgroundColor: isCurrentUser ? '#1890ff' : '#f0f0f0',\n                      color: isCurrentUser ? 'white' : '#000',\n                      wordBreak: 'break-word'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: msg.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontSize: '10px',\n                        opacity: 0.7,\n                        marginTop: '4px',\n                        textAlign: 'right'\n                      },\n                      children: new Date(msg.timestamp).toLocaleTimeString('vi-VN', {\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 27\n                  }, this)]\n                }, `${msg._id}-${index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 25\n                }, this);\n              }), selectedUser && typing[selectedUser._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  marginBottom: '12px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 31\n                  }, this),\n                  src: selectedUser.avatar,\n                  size: \"small\",\n                  style: {\n                    marginRight: '8px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    backgroundColor: '#f0f0f0',\n                    padding: '8px 12px',\n                    borderRadius: '12px',\n                    fontSize: '12px'\n                  },\n                  children: [selectedUser.username, \" \\u0111ang nh\\u1EADp...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messagesEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              style: {\n                margin: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '16px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: '8px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextArea, {\n                  value: message,\n                  onChange: e => {\n                    setMessage(e.target.value);\n                    handleTyping();\n                  },\n                  onKeyPress: handleKeyPress,\n                  placeholder: \"Nh\\u1EADp tin nh\\u1EAFn...\",\n                  autoSize: {\n                    minRows: 1,\n                    maxRows: 4\n                  },\n                  style: {\n                    flex: 1\n                  },\n                  disabled: sending\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 29\n                  }, this),\n                  onClick: handleSendMessage,\n                  loading: sending,\n                  disabled: !message.trim() || sending,\n                  children: \"G\\u1EEDi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(OptimizedMessengerChatPage, \"donMGTUmNHrAm98DVi8gzvRAAqw=\", false, function () {\n  return [useAuth, useChat];\n});\n_c = OptimizedMessengerChatPage;\nexport default OptimizedMessengerChatPage;\nvar _c;\n$RefreshReg$(_c, \"OptimizedMessengerChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","Typography","Input","Button","List","Avatar","Space","Divider","Badge","Row","Col","Skeleton","Empty","SendOutlined","UserOutlined","MessageOutlined","useAuth","useChat","socketService","jsxDEV","_jsxDEV","Fragment","_Fragment","Text","TextArea","OptimizedMessengerChatPage","_s","user","token","activeUsers","messagesByConversation","isLoadingUsers","isLoadingMessages","selectedUser","setSelectedUser","loadMessages","refreshActiveUsers","sendMessage","addMessage","markAsRead","message","setMessage","typing","setTyping","typingTimeoutRef","messagesEndRef","socketConnected","setSocketConnected","searchQuery","setSearchQuery","sending","setSending","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","_messagesByConversati","_id","length","socket","connect","on","console","log","newMessage","userId","isTyping","prev","clearTimeout","setTimeout","userData","currentTimeouts","Object","values","forEach","timeout","handleSendMessage","trim","messageContent","getSocket","emit","receiverId","content","error","handleKeyPress","e","key","shiftKey","preventDefault","handleTyping","filteredUsers","filter","u","username","toLowerCase","includes","currentMessages","className","children","gutter","style","height","xs","sm","md","lg","xl","title","fileName","_jsxFileName","lineNumber","columnNumber","status","text","bodyStyle","padding","Search","placeholder","value","onChange","target","marginBottom","map","i","avatar","active","paragraph","rows","description","image","PRESENTED_IMAGE_SIMPLE","dataSource","renderItem","chatUser","Item","onClick","cursor","borderRadius","backgroundColor","Meta","dot","isOnline","color","icon","src","size","display","justifyContent","alignItems","strong","type","fontSize","lastActive","Date","toLocaleString","flexDirection","marginTop","flex","overflowY","maxHeight","msg","index","_currentMessages","_currentMessages2","_currentMessages3","_currentMessages3$sen","senderId","sender","senderInfo","isCurrentUser","showAvatar","marginRight","visibility","maxWidth","wordBreak","opacity","textAlign","timestamp","toLocaleTimeString","hour","minute","ref","margin","gap","onKeyPress","autoSize","minRows","maxRows","disabled","loading","_c","$RefreshReg$"],"sources":["C:/Users/trann/Desktop/jwt-bt/frontend/src/Components/Chat/OptimizedMessengerChatPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  Card, \r\n  Typography, \r\n  Input, \r\n  Button, \r\n  List, \r\n  Avatar, \r\n  Space,\r\n  Divider,\r\n  Badge,\r\n  Row,\r\n  Col,\r\n  Skeleton,\r\n  Empty\r\n} from 'antd';\r\nimport { \r\n  SendOutlined, \r\n  UserOutlined,\r\n  MessageOutlined \r\n} from '@ant-design/icons';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useChat } from '../../contexts/ChatContext';\r\nimport socketService from '../../services/socketService';\r\nimport { Message, ChatUser } from '../../services/chatService';\r\nimport './MessengerChatPage.css';\r\n\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst OptimizedMessengerChatPage: React.FC = () => {\r\n  const { user, token } = useAuth();\r\n  const {\r\n    activeUsers,\r\n    messagesByConversation,\r\n    isLoadingUsers,\r\n    isLoadingMessages,\r\n    selectedUser,\r\n    setSelectedUser,\r\n    loadMessages,\r\n    refreshActiveUsers,\r\n    sendMessage,\r\n    addMessage,\r\n    markAsRead\r\n  } = useChat();\r\n  \r\n  const [message, setMessage] = useState('');\r\n  const [typing, setTyping] = useState<{ [key: string]: boolean }>({});\r\n  const typingTimeoutRef = useRef<{ [key: string]: NodeJS.Timeout }>({});\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [sending, setSending] = useState(false);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Auto-scroll when messages change\r\n  useEffect(() => {\r\n    if (selectedUser && messagesByConversation[selectedUser._id]?.length > 0) {\r\n      scrollToBottom();\r\n    }\r\n  }, [selectedUser, messagesByConversation]);\r\n\r\n  // Socket connection and event handlers\r\n  useEffect(() => {\r\n    if (token && !socketConnected) {\r\n      const socket = socketService.connect(`Bearer ${token}`);\r\n      \r\n      if (socket) {\r\n        socket.on('connect', () => {\r\n          console.log('Socket connected successfully');\r\n          setSocketConnected(true);\r\n          refreshActiveUsers();\r\n        });\r\n\r\n        socket.on('reconnect', () => {\r\n          console.log('Socket reconnected successfully');\r\n          setSocketConnected(true);\r\n          refreshActiveUsers();\r\n        });\r\n\r\n        socket.on('disconnect', () => {\r\n          console.log('Socket disconnected');\r\n          setSocketConnected(false);\r\n        });\r\n\r\n        socket.on('newMessage', (newMessage: Message) => {\r\n          console.log('Received new message:', newMessage);\r\n          addMessage(newMessage);\r\n          scrollToBottom();\r\n        });\r\n\r\n        socket.on('userTyping', ({ userId, isTyping }: { userId: string; isTyping: boolean }) => {\r\n          setTyping(prev => ({\r\n            ...prev,\r\n            [userId]: isTyping\r\n          }));\r\n\r\n          if (isTyping) {\r\n            if (typingTimeoutRef.current[userId]) {\r\n              clearTimeout(typingTimeoutRef.current[userId]);\r\n            }\r\n            typingTimeoutRef.current[userId] = setTimeout(() => {\r\n              setTyping(prev => ({\r\n                ...prev,\r\n                [userId]: false\r\n              }));\r\n            }, 3000);\r\n          }\r\n        });\r\n\r\n        socket.on('userOnline', (userData: ChatUser) => {\r\n          console.log('User came online:', userData);\r\n          refreshActiveUsers();\r\n        });\r\n\r\n        socket.on('userOffline', (userData: ChatUser) => {\r\n          console.log('User went offline:', userData);\r\n          refreshActiveUsers();\r\n        });\r\n      }\r\n    }    return () => {\r\n      const currentTimeouts = typingTimeoutRef.current;\r\n      Object.values(currentTimeouts).forEach(timeout => {\r\n        clearTimeout(timeout);\r\n      });\r\n    };\r\n  }, [token, socketConnected, refreshActiveUsers, addMessage]);\r\n\r\n  // Load messages when user is selected\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      loadMessages(selectedUser._id);\r\n      markAsRead(selectedUser._id);\r\n    }\r\n  }, [selectedUser, loadMessages, markAsRead]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!message.trim() || !selectedUser || sending) return;\r\n\r\n    const messageContent = message.trim();\r\n    setMessage('');\r\n    setSending(true);\r\n\r\n    try {\r\n      await sendMessage(selectedUser._id, messageContent);\r\n      \r\n      // Emit socket event for real-time\r\n      const socket = socketService.getSocket();\r\n      if (socket) {\r\n        socket.emit('sendMessage', {\r\n          receiverId: selectedUser._id,\r\n          content: messageContent\r\n        });\r\n      }\r\n      \r\n      scrollToBottom();\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      setMessage(messageContent); // Restore message on error\r\n    } finally {\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const handleTyping = () => {\r\n    if (selectedUser) {\r\n      const socket = socketService.getSocket();\r\n      if (socket) {\r\n        socket.emit('typing', {\r\n          receiverId: selectedUser._id,\r\n          isTyping: true\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const filteredUsers = activeUsers.filter(u => \r\n    u.username.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const currentMessages = selectedUser ? messagesByConversation[selectedUser._id] || [] : [];\r\n\r\n  return (\r\n    <div className=\"messenger-chat-page\">\r\n      <Row gutter={[16, 16]} style={{ height: '100%' }}>\r\n        {/* Users List */}\r\n        <Col xs={24} sm={24} md={8} lg={6} xl={6}>\r\n          <Card \r\n            title={\r\n              <Space>\r\n                <MessageOutlined />\r\n                <span>Tin nhắn</span>\r\n                {socketConnected && <Badge status=\"success\" text=\"Online\" />}\r\n              </Space>\r\n            }\r\n            className=\"users-list-card\"\r\n            bodyStyle={{ padding: '12px' }}\r\n          >\r\n            <Input.Search\r\n              placeholder=\"Tìm kiếm người dùng...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              style={{ marginBottom: 12 }}\r\n            />\r\n            \r\n            {isLoadingUsers ? (\r\n              <div>\r\n                {[1, 2, 3].map(i => (\r\n                  <div key={i} style={{ marginBottom: 16 }}>\r\n                    <Skeleton avatar active paragraph={{ rows: 1 }} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : filteredUsers.length === 0 ? (\r\n              <Empty \r\n                description=\"Không có người dùng nào\"\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            ) : (\r\n              <List\r\n                dataSource={filteredUsers}\r\n                renderItem={(chatUser) => (\r\n                  <List.Item\r\n                    key={chatUser._id}\r\n                    onClick={() => setSelectedUser(chatUser)}\r\n                    className={`user-item ${selectedUser?._id === chatUser._id ? 'active' : ''}`}\r\n                    style={{ \r\n                      cursor: 'pointer',\r\n                      padding: '12px',\r\n                      borderRadius: '8px',\r\n                      marginBottom: '4px',\r\n                      backgroundColor: selectedUser?._id === chatUser._id ? '#e6f7ff' : 'transparent'\r\n                    }}\r\n                  >\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Badge dot={chatUser.isOnline} color=\"green\">\r\n                          <Avatar \r\n                            icon={<UserOutlined />} \r\n                            src={chatUser.avatar}\r\n                            size=\"large\"\r\n                          />\r\n                        </Badge>\r\n                      }\r\n                      title={\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                          <Text strong>{chatUser.username}</Text>\r\n                          {typing[chatUser._id] && (\r\n                            <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n                              đang nhập...\r\n                            </Text>\r\n                          )}\r\n                        </div>\r\n                      }\r\n                      description={\r\n                        <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n                          {chatUser.isOnline ? 'Đang hoạt động' : `Hoạt động lần cuối: ${chatUser.lastActive ? new Date(chatUser.lastActive).toLocaleString('vi-VN') : 'Không xác định'}`}\r\n                        </Text>\r\n                      }\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            )}\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Chat Area */}\r\n        <Col xs={24} sm={24} md={16} lg={18} xl={18}>\r\n          <Card \r\n            title={\r\n              selectedUser ? (\r\n                <Space>\r\n                  <Badge dot={selectedUser.isOnline} color=\"green\">\r\n                    <Avatar \r\n                      icon={<UserOutlined />} \r\n                      src={selectedUser.avatar}\r\n                    />\r\n                  </Badge>\r\n                  <div>\r\n                    <div>{selectedUser.username}</div>\r\n                    <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n                      {selectedUser.isOnline ? 'Đang hoạt động' : 'Không hoạt động'}\r\n                    </Text>\r\n                  </div>\r\n                </Space>\r\n              ) : (\r\n                'Chọn một cuộc trò chuyện'\r\n              )\r\n            }\r\n            className=\"chat-area-card\"\r\n            bodyStyle={{ \r\n              padding: 0,\r\n              height: 'calc(100vh - 200px)',\r\n              display: 'flex',\r\n              flexDirection: 'column'\r\n            }}\r\n          >\r\n            {!selectedUser ? (\r\n              <div style={{ \r\n                display: 'flex', \r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                height: '100%',\r\n                flexDirection: 'column'\r\n              }}>\r\n                <MessageOutlined style={{ fontSize: '48px', color: '#d9d9d9' }} />\r\n                <Text type=\"secondary\" style={{ marginTop: '16px' }}>\r\n                  Chọn một cuộc trò chuyện để bắt đầu nhắn tin\r\n                </Text>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {/* Messages Area */}\r\n                <div \r\n                  className=\"messages-container\"\r\n                  style={{ \r\n                    flex: 1, \r\n                    overflowY: 'auto', \r\n                    padding: '16px',\r\n                    maxHeight: 'calc(100vh - 300px)'\r\n                  }}\r\n                >\r\n                  {isLoadingMessages ? (\r\n                    <div>\r\n                      {[1, 2, 3].map(i => (\r\n                        <div key={i} style={{ marginBottom: 16 }}>\r\n                          <Skeleton avatar active paragraph={{ rows: 1 }} />\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : currentMessages.length === 0 ? (\r\n                    <Empty \r\n                      description=\"Chưa có tin nhắn nào\"\r\n                      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                    />\r\n                  ) : (                    currentMessages.map((msg, index) => {\r\n                      const senderId = typeof msg.sender === 'string' ? msg.sender : msg.sender._id;\r\n                      const senderInfo = typeof msg.sender === 'string' ? null : msg.sender;\r\n                      const isCurrentUser = senderId === user?._id;\r\n                      const showAvatar = index === 0 || (\r\n                        typeof currentMessages[index - 1]?.sender === 'string' \r\n                          ? currentMessages[index - 1]?.sender !== senderId\r\n                          : (currentMessages[index - 1]?.sender as MessageUser)?._id !== senderId\r\n                      );\r\n                      \r\n                      return (\r\n                        <div\r\n                          key={`${msg._id}-${index}`}\r\n                          className={`message-item ${isCurrentUser ? 'sent' : 'received'}`}\r\n                          style={{\r\n                            display: 'flex',\r\n                            marginBottom: '12px',\r\n                            justifyContent: isCurrentUser ? 'flex-end' : 'flex-start'\r\n                          }}\r\n                        >\r\n                          {!isCurrentUser && (\r\n                            <Avatar \r\n                              icon={<UserOutlined />} \r\n                              src={msg.sender.avatar}\r\n                              size=\"small\"\r\n                              style={{ \r\n                                marginRight: '8px',\r\n                                visibility: showAvatar ? 'visible' : 'hidden'\r\n                              }}\r\n                            />\r\n                          )}\r\n                          <div \r\n                            className=\"message-content\"\r\n                            style={{\r\n                              maxWidth: '70%',\r\n                              padding: '8px 12px',\r\n                              borderRadius: '12px',\r\n                              backgroundColor: isCurrentUser ? '#1890ff' : '#f0f0f0',\r\n                              color: isCurrentUser ? 'white' : '#000',\r\n                              wordBreak: 'break-word'\r\n                            }}\r\n                          >\r\n                            <div>{msg.content}</div>\r\n                            <div \r\n                              style={{ \r\n                                fontSize: '10px', \r\n                                opacity: 0.7, \r\n                                marginTop: '4px',\r\n                                textAlign: 'right'\r\n                              }}\r\n                            >\r\n                              {new Date(msg.timestamp).toLocaleTimeString('vi-VN', {\r\n                                hour: '2-digit',\r\n                                minute: '2-digit'\r\n                              })}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  )}\r\n                  \r\n                  {selectedUser && typing[selectedUser._id] && (\r\n                    <div className=\"typing-indicator\" style={{ display: 'flex', alignItems: 'center', marginBottom: '12px' }}>\r\n                      <Avatar \r\n                        icon={<UserOutlined />} \r\n                        src={selectedUser.avatar}\r\n                        size=\"small\"\r\n                        style={{ marginRight: '8px' }}\r\n                      />\r\n                      <div style={{ \r\n                        backgroundColor: '#f0f0f0',\r\n                        padding: '8px 12px',\r\n                        borderRadius: '12px',\r\n                        fontSize: '12px'\r\n                      }}>\r\n                        {selectedUser.username} đang nhập...\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <div ref={messagesEndRef} />\r\n                </div>\r\n\r\n                <Divider style={{ margin: 0 }} />\r\n\r\n                {/* Message Input */}\r\n                <div style={{ padding: '16px' }}>\r\n                  <div style={{ display: 'flex', gap: '8px' }}>\r\n                    <TextArea\r\n                      value={message}\r\n                      onChange={(e) => {\r\n                        setMessage(e.target.value);\r\n                        handleTyping();\r\n                      }}\r\n                      onKeyPress={handleKeyPress}\r\n                      placeholder=\"Nhập tin nhắn...\"\r\n                      autoSize={{ minRows: 1, maxRows: 4 }}\r\n                      style={{ flex: 1 }}\r\n                      disabled={sending}\r\n                    />\r\n                    <Button\r\n                      type=\"primary\"\r\n                      icon={<SendOutlined />}\r\n                      onClick={handleSendMessage}\r\n                      loading={sending}\r\n                      disabled={!message.trim() || sending}\r\n                    >\r\n                      Gửi\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptimizedMessengerChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}