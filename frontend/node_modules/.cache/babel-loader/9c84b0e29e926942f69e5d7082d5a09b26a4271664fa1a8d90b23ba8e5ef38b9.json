{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trann\\\\Desktop\\\\jwt-bt\\\\frontend\\\\src\\\\Components\\\\Chat\\\\MessengerChatPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Card, Typography, Input, Button, List, Avatar, Space, Divider, Badge, Row, Col } from 'antd';\nimport { SendOutlined, UserOutlined, MessageOutlined } from '@ant-design/icons';\nimport { useAuth } from '../../contexts/AuthContext';\nimport socketService from '../../services/socketService';\nimport { chatService } from '../../services/chatService';\nimport './MessengerChatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  TextArea\n} = Input;\nconst MessengerChatPage = () => {\n  _s();\n  const {\n    user,\n    token\n  } = useAuth();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [typing, setTyping] = useState({});\n  const typingTimeoutRef = useRef({});\n  const messagesEndRef = useRef(null);\n  const [socketConnected, setSocketConnected] = useState(false);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const loadMessages = useCallback(async userId => {\n    try {\n      const messages = await chatService.getMessages(userId);\n      // Sort messages by timestamp\n      setMessages(messages.sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime()));\n      scrollToBottom();\n\n      // Mark messages as read\n      chatService.markAsRead(userId).catch(error => console.error('Error marking messages as read:', error));\n    } catch (error) {\n      console.error('Error loading messages:', error);\n    }\n  }, []);\n  const loadActiveUsers = useCallback(async () => {\n    try {\n      const users = await chatService.getActiveUsers();\n      // Filter out current user\n      const filteredUsers = users.filter(u => u._id !== (user === null || user === void 0 ? void 0 : user._id));\n      setActiveUsers(filteredUsers);\n    } catch (error) {\n      console.error('Error loading active users:', error);\n    }\n  }, [user === null || user === void 0 ? void 0 : user._id]);\n  useEffect(() => {\n    if (token && !socketConnected) {\n      console.log('Connecting socket with token');\n      const socket = socketService.connect(`Bearer ${token}`);\n      if (socket) {\n        socket.on('connect', () => {\n          console.log('Socket connected successfully');\n          setSocketConnected(true);\n        });\n        socket.on('connect_error', error => {\n          console.error('Socket connection error:', error);\n          setSocketConnected(false);\n        });\n        socket.on('disconnect', () => {\n          console.log('Socket disconnected');\n          setSocketConnected(false);\n        });\n      }\n      loadActiveUsers();\n      return () => {\n        console.log('Cleaning up socket connection');\n        socketService.disconnect();\n        setSocketConnected(false);\n      };\n    }\n  }, [token, loadActiveUsers]);\n  useEffect(() => {\n    if (socketConnected) {\n      const messageHandler = newMessage => {\n        console.log('Received message:', newMessage);\n        setMessages(prev => {\n          // Check if message already exists\n          const exists = prev.some(msg => msg._id === newMessage._id);\n          if (!exists) {\n            return [...prev, newMessage];\n          }\n          return prev;\n        });\n\n        // Only scroll if the message is part of the current conversation\n        if (newMessage.sender === (user === null || user === void 0 ? void 0 : user._id) && newMessage.receiver === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) || newMessage.sender === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) && newMessage.receiver === (user === null || user === void 0 ? void 0 : user._id)) {\n          scrollToBottom();\n        }\n      };\n      const userStatusHandler = async userId => {\n        await loadActiveUsers();\n      };\n      const typingHandler = ({\n        userId,\n        isTyping\n      }) => {\n        setTyping(prev => ({\n          ...prev,\n          [userId]: isTyping\n        }));\n      };\n      socketService.onMessage(messageHandler);\n      socketService.onUserStatus(userStatusHandler);\n      socketService.onTyping(typingHandler);\n      return () => {\n        // Cleanup event listeners\n        socketService.off('newMessage');\n        socketService.off('messageConfirmed');\n        socketService.off('userOnline');\n        socketService.off('userOffline');\n        socketService.off('userTyping');\n      };\n    }\n  }, [socketConnected, loadActiveUsers, user === null || user === void 0 ? void 0 : user._id, selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id]);\n  useEffect(() => {\n    if (selectedUser) {\n      loadMessages(selectedUser._id);\n    }\n  }, [selectedUser, loadMessages]);\n  const handleSendMessage = async () => {\n    if (!message.trim() || !selectedUser || !(user !== null && user !== void 0 && user._id)) return;\n    try {\n      // Clear typing status\n      if (typingTimeoutRef.current[selectedUser._id]) {\n        clearTimeout(typingTimeoutRef.current[selectedUser._id]);\n      }\n      socketService.sendTypingStatus(selectedUser._id, false);\n      const content = message.trim();\n      setMessage(''); // Reset input right away for better UX\n\n      // Create a temporary message\n      const tempMessage = {\n        _id: Date.now().toString(),\n        content,\n        sender: user._id,\n        receiver: selectedUser._id,\n        messageType: 'text',\n        timestamp: new Date(),\n        read: false\n      };\n\n      // Add optimistic update\n      setMessages(prev => [...prev, tempMessage]);\n      scrollToBottom();\n\n      // Send through both socket and API for reliability\n      socketService.sendMessage(selectedUser._id, content);\n      try {\n        const savedMessage = await chatService.sendMessage(selectedUser._id, content);\n        // Replace temp message with saved message\n        setMessages(prev => prev.map(msg => msg._id === tempMessage._id ? savedMessage : msg));\n      } catch (error) {\n        console.error('Failed to save message to API:', error);\n        // Keep the temporary message as it was sent through socket\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleTyping = e => {\n    setMessage(e.target.value);\n    if (selectedUser) {\n      // Clear existing timeout\n      if (typingTimeoutRef.current[selectedUser._id]) {\n        clearTimeout(typingTimeoutRef.current[selectedUser._id]);\n      }\n\n      // Send typing status\n      socketService.sendTypingStatus(selectedUser._id, true);\n\n      // Set new timeout\n      typingTimeoutRef.current[selectedUser._id] = setTimeout(() => {\n        socketService.sendTypingStatus(selectedUser._id, false);\n      }, 2000);\n    }\n  };\n  const formatTime = date => {\n    return new Date(date).toLocaleTimeString('vi-VN', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const filteredMessages = selectedUser ? messages.filter(msg => msg.sender === selectedUser._id && msg.receiver === (user === null || user === void 0 ? void 0 : user._id) || msg.sender === (user === null || user === void 0 ? void 0 : user._id) && msg.receiver === selectedUser._id) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messenger-chat-page\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 16,\n      style: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 8,\n        md: 6,\n        lg: 6,\n        xl: 5,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Conversations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this),\n          className: \"users-card\",\n          bodyStyle: {\n            padding: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(List, {\n            dataSource: activeUsers,\n            renderItem: chatUser => /*#__PURE__*/_jsxDEV(List.Item, {\n              className: `user-item ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) === chatUser._id ? 'selected' : ''}`,\n              onClick: () => setSelectedUser(chatUser),\n              children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                avatar: /*#__PURE__*/_jsxDEV(Badge, {\n                  dot: true,\n                  status: chatUser.isOnline ? 'success' : 'default',\n                  offset: [-2, 32],\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 33\n                    }, this),\n                    src: chatUser.avatar,\n                    size: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this),\n                title: /*#__PURE__*/_jsxDEV(Text, {\n                  strong: true,\n                  children: chatUser.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 28\n                }, this),\n                description: typing[chatUser._id] ? /*#__PURE__*/_jsxDEV(Text, {\n                  type: \"success\",\n                  children: \"Typing...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 25\n                }, this) : chatUser.isOnline ? /*#__PURE__*/_jsxDEV(Text, {\n                  type: \"success\",\n                  children: \"Online\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 25\n                }, this) : chatUser.lastSeen ? /*#__PURE__*/_jsxDEV(Text, {\n                  type: \"secondary\",\n                  children: [\"Last seen at \", formatTime(chatUser.lastSeen)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 25\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 16,\n        md: 18,\n        lg: 18,\n        xl: 19,\n        children: selectedUser ? /*#__PURE__*/_jsxDEV(Card, {\n          className: \"chat-card\",\n          title: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(Badge, {\n              dot: true,\n              status: selectedUser.isOnline ? 'success' : 'default',\n              offset: [-2, 32],\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 29\n                }, this),\n                src: selectedUser.avatar,\n                size: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedUser.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this), typing[selectedUser._id] && /*#__PURE__*/_jsxDEV(Text, {\n              type: \"secondary\",\n              italic: true,\n              children: \"typing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this),\n          style: {\n            height: 'calc(100vh - 200px)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-container\",\n            children: [/*#__PURE__*/_jsxDEV(List, {\n              dataSource: filteredMessages,\n              renderItem: msg => /*#__PURE__*/_jsxDEV(List.Item, {\n                className: `message-item ${msg.sender === (user === null || user === void 0 ? void 0 : user._id) ? 'own-message' : 'other-message'}`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-bubble\",\n                    children: /*#__PURE__*/_jsxDEV(Text, {\n                      children: msg.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    type: \"secondary\",\n                    className: \"message-time\",\n                    children: formatTime(msg.timestamp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            style: {\n              margin: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-input-container\",\n            children: /*#__PURE__*/_jsxDEV(Space.Compact, {\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextArea, {\n                value: message,\n                onChange: handleTyping,\n                onKeyPress: handleKeyPress,\n                placeholder: \"Type a message...\",\n                autoSize: {\n                  minRows: 1,\n                  maxRows: 4\n                },\n                style: {\n                  resize: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 27\n                }, this),\n                onClick: handleSendMessage,\n                disabled: !message.trim(),\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          className: \"no-chat-selected\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              padding: '60px 20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {\n              style: {\n                fontSize: '48px',\n                color: '#d9d9d9'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Title, {\n              level: 4,\n              type: \"secondary\",\n              children: \"Select a conversation to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              type: \"secondary\",\n              children: \"Choose from your existing conversations on the left or start a new one.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(MessengerChatPage, \"Jn39ytgatvtPtItVPwzPQjRaPDo=\", false, function () {\n  return [useAuth];\n});\n_c = MessengerChatPage;\nexport default MessengerChatPage;\nvar _c;\n$RefreshReg$(_c, \"MessengerChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Card","Typography","Input","Button","List","Avatar","Space","Divider","Badge","Row","Col","SendOutlined","UserOutlined","MessageOutlined","useAuth","socketService","chatService","jsxDEV","_jsxDEV","Title","Text","TextArea","MessengerChatPage","_s","user","token","message","setMessage","messages","setMessages","activeUsers","setActiveUsers","selectedUser","setSelectedUser","typing","setTyping","typingTimeoutRef","messagesEndRef","socketConnected","setSocketConnected","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadMessages","userId","getMessages","sort","a","b","Date","timestamp","getTime","markAsRead","catch","error","console","loadActiveUsers","users","getActiveUsers","filteredUsers","filter","u","_id","log","socket","connect","on","disconnect","messageHandler","newMessage","prev","exists","some","msg","sender","receiver","userStatusHandler","typingHandler","isTyping","onMessage","onUserStatus","onTyping","off","handleSendMessage","trim","clearTimeout","sendTypingStatus","content","tempMessage","now","toString","messageType","read","sendMessage","savedMessage","map","handleKeyPress","e","key","shiftKey","preventDefault","handleTyping","target","value","setTimeout","formatTime","date","toLocaleTimeString","hour","minute","filteredMessages","className","children","gutter","style","height","xs","sm","md","lg","xl","title","fileName","_jsxFileName","lineNumber","columnNumber","bodyStyle","padding","dataSource","renderItem","chatUser","Item","onClick","Meta","avatar","dot","status","isOnline","offset","icon","src","size","strong","username","description","type","lastSeen","italic","ref","margin","Compact","width","onChange","onKeyPress","placeholder","autoSize","minRows","maxRows","resize","disabled","textAlign","fontSize","color","level","_c","$RefreshReg$"],"sources":["C:/Users/trann/Desktop/jwt-bt/frontend/src/Components/Chat/MessengerChatPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { \r\n  Card, \r\n  Typography, \r\n  Input, \r\n  Button, \r\n  List, \r\n  Avatar, \r\n  Space,\r\n  Divider,\r\n  Badge,\r\n  Row,\r\n  Col \r\n} from 'antd';\r\nimport { \r\n  SendOutlined, \r\n  UserOutlined,\r\n  MessageOutlined \r\n} from '@ant-design/icons';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport socketService from '../../services/socketService';\r\nimport { chatService, Message, ChatUser } from '../../services/chatService';\r\nimport './MessengerChatPage.css';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst MessengerChatPage: React.FC = () => {\r\n  const { user, token } = useAuth();\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [activeUsers, setActiveUsers] = useState<ChatUser[]>([]);\r\n  const [selectedUser, setSelectedUser] = useState<ChatUser | null>(null);\r\n  const [typing, setTyping] = useState<{ [key: string]: boolean }>({});\r\n  const typingTimeoutRef = useRef<{ [key: string]: NodeJS.Timeout }>({});\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const loadMessages = useCallback(async (userId: string) => {\r\n    try {\r\n      const messages = await chatService.getMessages(userId);\r\n      // Sort messages by timestamp\r\n      setMessages(messages.sort((a, b) => \r\n        new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime()\r\n      ));\r\n      scrollToBottom();\r\n      \r\n      // Mark messages as read\r\n      chatService.markAsRead(userId)\r\n        .catch(error => console.error('Error marking messages as read:', error));\r\n    } catch (error) {\r\n      console.error('Error loading messages:', error);\r\n    }\r\n  }, []);\r\n\r\n  const loadActiveUsers = useCallback(async () => {\r\n    try {\r\n      const users = await chatService.getActiveUsers();\r\n      // Filter out current user\r\n      const filteredUsers = users.filter(u => u._id !== user?._id);\r\n      setActiveUsers(filteredUsers);\r\n    } catch (error) {\r\n      console.error('Error loading active users:', error);\r\n    }\r\n  }, [user?._id]);\r\n  useEffect(() => {\r\n    if (token && !socketConnected) {\r\n      console.log('Connecting socket with token');\r\n      const socket = socketService.connect(`Bearer ${token}`);\r\n      \r\n      if (socket) {\r\n        socket.on('connect', () => {\r\n          console.log('Socket connected successfully');\r\n          setSocketConnected(true);\r\n        });\r\n\r\n        socket.on('connect_error', (error: Error) => {\r\n          console.error('Socket connection error:', error);\r\n          setSocketConnected(false);\r\n        });\r\n\r\n        socket.on('disconnect', () => {\r\n          console.log('Socket disconnected');\r\n          setSocketConnected(false);\r\n        });\r\n      }\r\n\r\n      loadActiveUsers();\r\n\r\n      return () => {\r\n        console.log('Cleaning up socket connection');\r\n        socketService.disconnect();\r\n        setSocketConnected(false);\r\n      };\r\n    }\r\n  }, [token, loadActiveUsers]);\r\n\r\n  useEffect(() => {\r\n    if (socketConnected) {\r\n      const messageHandler = (newMessage: Message) => {\r\n        console.log('Received message:', newMessage);\r\n        setMessages(prev => {\r\n          // Check if message already exists\r\n          const exists = prev.some(msg => msg._id === newMessage._id);\r\n          if (!exists) {\r\n            return [...prev, newMessage];\r\n          }\r\n          return prev;\r\n        });\r\n        \r\n        // Only scroll if the message is part of the current conversation\r\n        if ((newMessage.sender === user?._id && newMessage.receiver === selectedUser?._id) ||\r\n            (newMessage.sender === selectedUser?._id && newMessage.receiver === user?._id)) {\r\n          scrollToBottom();\r\n        }\r\n      };\r\n\r\n      const userStatusHandler = async (userId: string) => {\r\n        await loadActiveUsers();\r\n      };\r\n\r\n      const typingHandler = ({ userId, isTyping }: { userId: string, isTyping: boolean }) => {\r\n        setTyping(prev => ({ ...prev, [userId]: isTyping }));\r\n      };\r\n\r\n      socketService.onMessage(messageHandler);\r\n      socketService.onUserStatus(userStatusHandler);\r\n      socketService.onTyping(typingHandler);\r\n\r\n      return () => {\r\n        // Cleanup event listeners\r\n        socketService.off('newMessage');\r\n        socketService.off('messageConfirmed');\r\n        socketService.off('userOnline');\r\n        socketService.off('userOffline');\r\n        socketService.off('userTyping');\r\n      };\r\n    }\r\n  }, [socketConnected, loadActiveUsers, user?._id, selectedUser?._id]);\r\n\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      loadMessages(selectedUser._id);\r\n    }\r\n  }, [selectedUser, loadMessages]);\r\n  const handleSendMessage = async () => {\r\n    if (!message.trim() || !selectedUser || !user?._id) return;\r\n\r\n    try {\r\n      // Clear typing status\r\n      if (typingTimeoutRef.current[selectedUser._id]) {\r\n        clearTimeout(typingTimeoutRef.current[selectedUser._id]);\r\n      }\r\n      socketService.sendTypingStatus(selectedUser._id, false);\r\n\r\n      const content = message.trim();\r\n      setMessage(''); // Reset input right away for better UX\r\n\r\n      // Create a temporary message\r\n      const tempMessage: Message = {\r\n        _id: Date.now().toString(),\r\n        content,\r\n        sender: user._id,\r\n        receiver: selectedUser._id,\r\n        messageType: 'text',\r\n        timestamp: new Date(),\r\n        read: false\r\n      };\r\n\r\n      // Add optimistic update\r\n      setMessages(prev => [...prev, tempMessage]);\r\n      scrollToBottom();\r\n\r\n      // Send through both socket and API for reliability\r\n      socketService.sendMessage(selectedUser._id, content);\r\n      \r\n      try {\r\n        const savedMessage = await chatService.sendMessage(selectedUser._id, content);\r\n        // Replace temp message with saved message\r\n        setMessages(prev => prev.map(msg => \r\n          msg._id === tempMessage._id ? savedMessage : msg\r\n        ));\r\n      } catch (error) {\r\n        console.error('Failed to save message to API:', error);\r\n        // Keep the temporary message as it was sent through socket\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const handleTyping = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setMessage(e.target.value);\r\n    \r\n    if (selectedUser) {\r\n      // Clear existing timeout\r\n      if (typingTimeoutRef.current[selectedUser._id]) {\r\n        clearTimeout(typingTimeoutRef.current[selectedUser._id]);\r\n      }\r\n\r\n      // Send typing status\r\n      socketService.sendTypingStatus(selectedUser._id, true);\r\n\r\n      // Set new timeout\r\n      typingTimeoutRef.current[selectedUser._id] = setTimeout(() => {\r\n        socketService.sendTypingStatus(selectedUser._id, false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const formatTime = (date: Date) => {\r\n    return new Date(date).toLocaleTimeString('vi-VN', { \r\n      hour: '2-digit', \r\n      minute: '2-digit' \r\n    });\r\n  };\r\n  const filteredMessages = selectedUser \r\n    ? messages.filter(msg => \r\n        (msg.sender === selectedUser._id && msg.receiver === user?._id) ||\r\n        (msg.sender === user?._id && msg.receiver === selectedUser._id)\r\n      )\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"messenger-chat-page\">\r\n      <Row gutter={16} style={{ height: '100%' }}>\r\n        <Col xs={24} sm={8} md={6} lg={6} xl={5}>\r\n          <Card \r\n            title={\r\n              <Space>\r\n                <MessageOutlined />\r\n                <span>Conversations</span>\r\n              </Space>\r\n            }\r\n            className=\"users-card\"\r\n            bodyStyle={{ padding: 0 }}\r\n          >\r\n            <List\r\n              dataSource={activeUsers}\r\n              renderItem={(chatUser) => (\r\n                <List.Item\r\n                  className={`user-item ${selectedUser?._id === chatUser._id ? 'selected' : ''}`}\r\n                  onClick={() => setSelectedUser(chatUser)}\r\n                >\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                      <Badge \r\n                        dot \r\n                        status={chatUser.isOnline ? 'success' : 'default'}\r\n                        offset={[-2, 32]}\r\n                      >\r\n                        <Avatar \r\n                          icon={<UserOutlined />} \r\n                          src={chatUser.avatar}\r\n                          size=\"large\"\r\n                        />\r\n                      </Badge>\r\n                    }\r\n                    title={<Text strong>{chatUser.username}</Text>}\r\n                    description={\r\n                      typing[chatUser._id] ? (\r\n                        <Text type=\"success\">Typing...</Text>\r\n                      ) : chatUser.isOnline ? (\r\n                        <Text type=\"success\">Online</Text>\r\n                      ) : chatUser.lastSeen ? (\r\n                        <Text type=\"secondary\">\r\n                          Last seen at {formatTime(chatUser.lastSeen)}\r\n                        </Text>\r\n                      ) : null\r\n                    }\r\n                  />\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col xs={24} sm={16} md={18} lg={18} xl={19}>\r\n          {selectedUser ? (\r\n            <Card\r\n              className=\"chat-card\"\r\n              title={\r\n                <Space>\r\n                  <Badge \r\n                    dot \r\n                    status={selectedUser.isOnline ? 'success' : 'default'}\r\n                    offset={[-2, 32]}\r\n                  >\r\n                    <Avatar \r\n                      icon={<UserOutlined />} \r\n                      src={selectedUser.avatar}\r\n                      size=\"large\"\r\n                    />\r\n                  </Badge>\r\n                  <span>{selectedUser.username}</span>\r\n                  {typing[selectedUser._id] && (\r\n                    <Text type=\"secondary\" italic>typing...</Text>\r\n                  )}\r\n                </Space>\r\n              }\r\n              style={{\r\n                height: 'calc(100vh - 200px)'\r\n              }}\r\n            >\r\n              <div className=\"messages-container\">\r\n                <List\r\n                  dataSource={filteredMessages}\r\n                  renderItem={(msg) => (\r\n                    <List.Item\r\n                      className={`message-item ${\r\n                        msg.sender === user?._id ? 'own-message' : 'other-message'\r\n                      }`}\r\n                    >\r\n                      <div className=\"message-content\">\r\n                        <div className=\"message-bubble\">\r\n                          <Text>{msg.content}</Text>\r\n                        </div>\r\n                        <Text type=\"secondary\" className=\"message-time\">\r\n                          {formatTime(msg.timestamp)}\r\n                        </Text>\r\n                      </div>\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n\r\n              <Divider style={{ margin: 0 }} />\r\n\r\n              <div className=\"message-input-container\">\r\n                <Space.Compact style={{ width: '100%' }}>\r\n                  <TextArea\r\n                    value={message}\r\n                    onChange={handleTyping}\r\n                    onKeyPress={handleKeyPress}\r\n                    placeholder=\"Type a message...\"\r\n                    autoSize={{ minRows: 1, maxRows: 4 }}\r\n                    style={{ resize: 'none' }}\r\n                  />\r\n                  <Button\r\n                    type=\"primary\"\r\n                    icon={<SendOutlined />}\r\n                    onClick={handleSendMessage}\r\n                    disabled={!message.trim()}\r\n                  >\r\n                    Send\r\n                  </Button>\r\n                </Space.Compact>\r\n              </div>\r\n            </Card>\r\n          ) : (\r\n            <Card className=\"no-chat-selected\">\r\n              <div style={{ textAlign: 'center', padding: '60px 20px' }}>\r\n                <MessageOutlined style={{ fontSize: '48px', color: '#d9d9d9' }} />\r\n                <Title level={4} type=\"secondary\">Select a conversation to start chatting</Title>\r\n                <Text type=\"secondary\">\r\n                  Choose from your existing conversations on the left or start a new one.\r\n                </Text>\r\n              </div>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessengerChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}