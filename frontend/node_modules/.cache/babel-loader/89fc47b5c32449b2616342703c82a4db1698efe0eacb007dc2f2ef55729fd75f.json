{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trann\\\\Desktop\\\\jwt-bt\\\\frontend\\\\src\\\\Components\\\\Chat\\\\MessengerChatPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Typography, Input, Button, List, Avatar, Space, Divider, Badge, Row, Col } from 'antd';\nimport { SendOutlined, UserOutlined, MessageOutlined } from '@ant-design/icons';\nimport { useAuth } from '../../contexts/AuthContext';\nimport './MessengerChatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  TextArea\n} = Input;\nconst MessengerChatPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Mock data for demonstration\n  useEffect(() => {\n    const mockUsers = [{\n      id: '1',\n      username: 'John Doe',\n      isOnline: true\n    }, {\n      id: '2',\n      username: 'Jane Smith',\n      isOnline: true\n    }, {\n      id: '3',\n      username: 'Mike Johnson',\n      isOnline: false,\n      lastSeen: new Date(Date.now() - 1000 * 60 * 30) // 30 minutes ago\n    }];\n    const mockMessages = [{\n      id: '1',\n      content: 'Hello! How are you doing?',\n      senderId: '1',\n      senderName: 'John Doe',\n      timestamp: new Date(Date.now() - 1000 * 60 * 10),\n      // 10 minutes ago\n      type: 'text'\n    }, {\n      id: '2',\n      content: 'I\\'m doing great, thanks for asking!',\n      senderId: (user === null || user === void 0 ? void 0 : user.id) || 'current-user',\n      senderName: (user === null || user === void 0 ? void 0 : user.username) || 'You',\n      timestamp: new Date(Date.now() - 1000 * 60 * 5),\n      // 5 minutes ago\n      type: 'text'\n    }];\n    setActiveUsers(mockUsers);\n    setMessages(mockMessages);\n    setSelectedUser(mockUsers[0]);\n  }, [user]);\n  const handleSendMessage = () => {\n    if (!message.trim() || !selectedUser) return;\n    const newMessage = {\n      id: Date.now().toString(),\n      content: message.trim(),\n      senderId: (user === null || user === void 0 ? void 0 : user.id) || 'current-user',\n      senderName: (user === null || user === void 0 ? void 0 : user.username) || 'You',\n      timestamp: new Date(),\n      type: 'text'\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setMessage('');\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const formatTime = date => {\n    return date.toLocaleTimeString('vi-VN', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const filteredMessages = selectedUser ? messages.filter(msg => msg.senderId === selectedUser.id || msg.senderId === ((user === null || user === void 0 ? void 0 : user.id) || 'current-user')) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messenger-chat-page\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 16,\n      style: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 8,\n        md: 6,\n        lg: 6,\n        xl: 5,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Conversations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this),\n          className: \"users-card\",\n          bodyStyle: {\n            padding: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(List, {\n            dataSource: activeUsers,\n            renderItem: chatUser => /*#__PURE__*/_jsxDEV(List.Item, {\n              className: `user-item ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === chatUser.id ? 'selected' : ''}`,\n              onClick: () => setSelectedUser(chatUser),\n              children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                avatar: /*#__PURE__*/_jsxDEV(Badge, {\n                  dot: true,\n                  status: chatUser.isOnline ? 'success' : 'default',\n                  offset: [-2, 32],\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 33\n                    }, this),\n                    src: chatUser.avatar,\n                    size: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this),\n                title: /*#__PURE__*/_jsxDEV(Text, {\n                  strong: true,\n                  children: chatUser.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 28\n                }, this),\n                description: chatUser.isOnline ? /*#__PURE__*/_jsxDEV(Text, {\n                  type: \"success\",\n                  children: \"Online\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 27\n                }, this) : chatUser.lastSeen ? /*#__PURE__*/_jsxDEV(Text, {\n                  type: \"secondary\",\n                  children: [\"Last seen \", formatTime(chatUser.lastSeen)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(Text, {\n                  type: \"secondary\",\n                  children: \"Offline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 16,\n        md: 18,\n        lg: 18,\n        xl: 19,\n        children: selectedUser ? /*#__PURE__*/_jsxDEV(Card, {\n          className: \"chat-card\",\n          title: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this),\n              src: selectedUser.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                strong: true,\n                children: selectedUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                type: \"secondary\",\n                style: {\n                  fontSize: '12px'\n                },\n                children: selectedUser.isOnline ? 'Online' : 'Offline'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this),\n          bodyStyle: {\n            padding: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            height: 'calc(100vh - 200px)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-container\",\n            children: /*#__PURE__*/_jsxDEV(List, {\n              dataSource: filteredMessages,\n              renderItem: msg => /*#__PURE__*/_jsxDEV(List.Item, {\n                className: `message-item ${msg.senderId === ((user === null || user === void 0 ? void 0 : user.id) || 'current-user') ? 'own-message' : 'other-message'}`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-bubble\",\n                    children: /*#__PURE__*/_jsxDEV(Text, {\n                      children: msg.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    type: \"secondary\",\n                    className: \"message-time\",\n                    children: formatTime(msg.timestamp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            style: {\n              margin: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-input-container\",\n            children: /*#__PURE__*/_jsxDEV(Space.Compact, {\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextArea, {\n                value: message,\n                onChange: e => setMessage(e.target.value),\n                onKeyPress: handleKeyPress,\n                placeholder: \"Type a message...\",\n                autoSize: {\n                  minRows: 1,\n                  maxRows: 4\n                },\n                style: {\n                  resize: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 27\n                }, this),\n                onClick: handleSendMessage,\n                disabled: !message.trim(),\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          className: \"no-chat-selected\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              padding: '60px 20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {\n              style: {\n                fontSize: '48px',\n                color: '#d9d9d9'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Title, {\n              level: 4,\n              type: \"secondary\",\n              children: \"Select a conversation to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              type: \"secondary\",\n              children: \"Choose from your existing conversations on the left or start a new one.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(MessengerChatPage, \"Rz4Q3fmQcNuSAZSjezI7FLytz7Q=\", false, function () {\n  return [useAuth];\n});\n_c = MessengerChatPage;\nexport default MessengerChatPage;\nvar _c;\n$RefreshReg$(_c, \"MessengerChatPage\");","map":{"version":3,"names":["React","useState","useEffect","Card","Typography","Input","Button","List","Avatar","Space","Divider","Badge","Row","Col","SendOutlined","UserOutlined","MessageOutlined","useAuth","jsxDEV","_jsxDEV","Title","Text","TextArea","MessengerChatPage","_s","user","message","setMessage","messages","setMessages","activeUsers","setActiveUsers","selectedUser","setSelectedUser","mockUsers","id","username","isOnline","lastSeen","Date","now","mockMessages","content","senderId","senderName","timestamp","type","handleSendMessage","trim","newMessage","toString","prev","handleKeyPress","e","key","shiftKey","preventDefault","formatTime","date","toLocaleTimeString","hour","minute","filteredMessages","filter","msg","className","children","gutter","style","height","xs","sm","md","lg","xl","title","fileName","_jsxFileName","lineNumber","columnNumber","bodyStyle","padding","dataSource","renderItem","chatUser","Item","onClick","Meta","avatar","dot","status","offset","icon","src","size","strong","description","fontSize","display","flexDirection","margin","Compact","width","value","onChange","target","onKeyPress","placeholder","autoSize","minRows","maxRows","resize","disabled","textAlign","color","level","_c","$RefreshReg$"],"sources":["C:/Users/trann/Desktop/jwt-bt/frontend/src/Components/Chat/MessengerChatPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Card, \r\n  Typography, \r\n  Input, \r\n  Button, \r\n  List, \r\n  Avatar, \r\n  Space,\r\n  Divider,\r\n  Badge,\r\n  Row,\r\n  Col \r\n} from 'antd';\r\nimport { \r\n  SendOutlined, \r\n  UserOutlined,\r\n  MessageOutlined \r\n} from '@ant-design/icons';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport './MessengerChatPage.css';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\ninterface ChatMessage {\r\n  id: string;\r\n  content: string;\r\n  senderId: string;\r\n  senderName: string;\r\n  timestamp: Date;\r\n  type: 'text' | 'image' | 'file';\r\n}\r\n\r\ninterface ChatUser {\r\n  id: string;\r\n  username: string;\r\n  avatar?: string;\r\n  isOnline: boolean;\r\n  lastSeen?: Date;\r\n}\r\n\r\nconst MessengerChatPage: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [activeUsers, setActiveUsers] = useState<ChatUser[]>([]);\r\n  const [selectedUser, setSelectedUser] = useState<ChatUser | null>(null);\r\n\r\n  // Mock data for demonstration\r\n  useEffect(() => {\r\n    const mockUsers: ChatUser[] = [\r\n      {\r\n        id: '1',\r\n        username: 'John Doe',\r\n        isOnline: true,\r\n      },\r\n      {\r\n        id: '2',\r\n        username: 'Jane Smith',\r\n        isOnline: true,\r\n      },\r\n      {\r\n        id: '3',\r\n        username: 'Mike Johnson',\r\n        isOnline: false,\r\n        lastSeen: new Date(Date.now() - 1000 * 60 * 30), // 30 minutes ago\r\n      },\r\n    ];\r\n\r\n    const mockMessages: ChatMessage[] = [\r\n      {\r\n        id: '1',\r\n        content: 'Hello! How are you doing?',\r\n        senderId: '1',\r\n        senderName: 'John Doe',\r\n        timestamp: new Date(Date.now() - 1000 * 60 * 10), // 10 minutes ago\r\n        type: 'text',\r\n      },\r\n      {\r\n        id: '2',\r\n        content: 'I\\'m doing great, thanks for asking!',\r\n        senderId: user?.id || 'current-user',\r\n        senderName: user?.username || 'You',\r\n        timestamp: new Date(Date.now() - 1000 * 60 * 5), // 5 minutes ago\r\n        type: 'text',\r\n      },\r\n    ];\r\n\r\n    setActiveUsers(mockUsers);\r\n    setMessages(mockMessages);\r\n    setSelectedUser(mockUsers[0]);\r\n  }, [user]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (!message.trim() || !selectedUser) return;\r\n\r\n    const newMessage: ChatMessage = {\r\n      id: Date.now().toString(),\r\n      content: message.trim(),\r\n      senderId: user?.id || 'current-user',\r\n      senderName: user?.username || 'You',\r\n      timestamp: new Date(),\r\n      type: 'text',\r\n    };\r\n\r\n    setMessages(prev => [...prev, newMessage]);\r\n    setMessage('');\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const formatTime = (date: Date) => {\r\n    return date.toLocaleTimeString('vi-VN', { \r\n      hour: '2-digit', \r\n      minute: '2-digit' \r\n    });\r\n  };\r\n\r\n  const filteredMessages = selectedUser \r\n    ? messages.filter(msg => \r\n        msg.senderId === selectedUser.id || msg.senderId === (user?.id || 'current-user')\r\n      )\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"messenger-chat-page\">\r\n      <Row gutter={16} style={{ height: '100%' }}>\r\n        {/* Users List */}\r\n        <Col xs={24} sm={8} md={6} lg={6} xl={5}>\r\n          <Card \r\n            title={\r\n              <Space>\r\n                <MessageOutlined />\r\n                <span>Conversations</span>\r\n              </Space>\r\n            }\r\n            className=\"users-card\"\r\n            bodyStyle={{ padding: 0 }}\r\n          >\r\n            <List\r\n              dataSource={activeUsers}\r\n              renderItem={(chatUser) => (\r\n                <List.Item\r\n                  className={`user-item ${selectedUser?.id === chatUser.id ? 'selected' : ''}`}\r\n                  onClick={() => setSelectedUser(chatUser)}\r\n                >\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                      <Badge \r\n                        dot \r\n                        status={chatUser.isOnline ? 'success' : 'default'}\r\n                        offset={[-2, 32]}\r\n                      >\r\n                        <Avatar \r\n                          icon={<UserOutlined />} \r\n                          src={chatUser.avatar}\r\n                          size=\"large\"\r\n                        />\r\n                      </Badge>\r\n                    }\r\n                    title={<Text strong>{chatUser.username}</Text>}\r\n                    description={\r\n                      chatUser.isOnline \r\n                        ? <Text type=\"success\">Online</Text>\r\n                        : chatUser.lastSeen \r\n                          ? <Text type=\"secondary\">Last seen {formatTime(chatUser.lastSeen)}</Text>\r\n                          : <Text type=\"secondary\">Offline</Text>\r\n                    }\r\n                  />\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Chat Area */}\r\n        <Col xs={24} sm={16} md={18} lg={18} xl={19}>\r\n          {selectedUser ? (\r\n            <Card \r\n              className=\"chat-card\"\r\n              title={\r\n                <Space>\r\n                  <Avatar icon={<UserOutlined />} src={selectedUser.avatar} />\r\n                  <div>\r\n                    <Text strong>{selectedUser.username}</Text>\r\n                    <br />\r\n                    <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n                      {selectedUser.isOnline ? 'Online' : 'Offline'}\r\n                    </Text>\r\n                  </div>\r\n                </Space>\r\n              }\r\n              bodyStyle={{ \r\n                padding: 0, \r\n                display: 'flex', \r\n                flexDirection: 'column',\r\n                height: 'calc(100vh - 200px)'\r\n              }}\r\n            >\r\n              {/* Messages Area */}\r\n              <div className=\"messages-container\">\r\n                <List\r\n                  dataSource={filteredMessages}\r\n                  renderItem={(msg) => (\r\n                    <List.Item\r\n                      className={`message-item ${\r\n                        msg.senderId === (user?.id || 'current-user') ? 'own-message' : 'other-message'\r\n                      }`}\r\n                    >\r\n                      <div className=\"message-content\">\r\n                        <div className=\"message-bubble\">\r\n                          <Text>{msg.content}</Text>\r\n                        </div>\r\n                        <Text type=\"secondary\" className=\"message-time\">\r\n                          {formatTime(msg.timestamp)}\r\n                        </Text>\r\n                      </div>\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </div>\r\n\r\n              <Divider style={{ margin: 0 }} />\r\n\r\n              {/* Message Input */}\r\n              <div className=\"message-input-container\">\r\n                <Space.Compact style={{ width: '100%' }}>\r\n                  <TextArea\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    onKeyPress={handleKeyPress}\r\n                    placeholder=\"Type a message...\"\r\n                    autoSize={{ minRows: 1, maxRows: 4 }}\r\n                    style={{ resize: 'none' }}\r\n                  />\r\n                  <Button\r\n                    type=\"primary\"\r\n                    icon={<SendOutlined />}\r\n                    onClick={handleSendMessage}\r\n                    disabled={!message.trim()}\r\n                  >\r\n                    Send\r\n                  </Button>\r\n                </Space.Compact>\r\n              </div>\r\n            </Card>\r\n          ) : (\r\n            <Card className=\"no-chat-selected\">\r\n              <div style={{ textAlign: 'center', padding: '60px 20px' }}>\r\n                <MessageOutlined style={{ fontSize: '48px', color: '#d9d9d9' }} />\r\n                <Title level={4} type=\"secondary\">Select a conversation to start chatting</Title>\r\n                <Text type=\"secondary\">\r\n                  Choose from your existing conversations on the left or start a new one.\r\n                </Text>\r\n              </div>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessengerChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}