{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: async data => {\n    const response = await api.post('/v1/auth/login', data);\n    return response.data;\n  },\n  register: async data => {\n    const response = await api.post('/v1/auth/register', data);\n    return response.data;\n  },\n  logout: async () => {\n    const response = await api.post('/v1/auth/logout');\n    return response.data;\n  },\n  refreshToken: async () => {\n    const response = await api.post('/v1/auth/refresh');\n    return response.data;\n  }\n};\nexport const userAPI = {\n  getAllUsers: async () => {\n    const response = await api.get('/v1/user');\n    return response.data;\n  },\n  updateProfile: async data => {\n    const response = await api.put('/v1/user/profile', data);\n    return response.data;\n  },\n  deleteUser: async id => {\n    const response = await api.delete(`/v1/user/${id}`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","login","data","post","register","logout","refreshToken","userAPI","getAllUsers","get","updateProfile","put","deleteUser","id","delete"],"sources":["C:/Users/trann/Desktop/jwt-bt/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { LoginFormData, RegisterFormData } from '../types';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  withCredentials: true,\r\n});\r\n\r\n// Add auth token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Handle token expiration\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authAPI = {\r\n  login: async (data: LoginFormData) => {\r\n    const response = await api.post('/v1/auth/login', data);\r\n    return response.data;\r\n  },\r\n\r\n  register: async (data: RegisterFormData) => {\r\n    const response = await api.post('/v1/auth/register', data);\r\n    return response.data;\r\n  },\r\n\r\n  logout: async () => {\r\n    const response = await api.post('/v1/auth/logout');\r\n    return response.data;\r\n  },\r\n\r\n  refreshToken: async () => {\r\n    const response = await api.post('/v1/auth/refresh');\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport const userAPI = {\r\n  getAllUsers: async () => {\r\n    const response = await api.get('/v1/user');\r\n    return response.data;\r\n  },\r\n  updateProfile: async (data: any) => {\r\n    const response = await api.put('/v1/user/profile', data);\r\n    return response.data;\r\n  },\r\n\r\n  deleteUser: async (id: string) => {\r\n    const response = await api.delete(`/v1/user/${id}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAE7E;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACI,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC1BO,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMS,OAAO,GAAG;EACrBC,KAAK,EAAE,MAAOC,IAAmB,IAAK;IACpC,MAAMZ,QAAQ,GAAG,MAAMb,GAAG,CAAC0B,IAAI,CAAC,gBAAgB,EAAED,IAAI,CAAC;IACvD,OAAOZ,QAAQ,CAACY,IAAI;EACtB,CAAC;EAEDE,QAAQ,EAAE,MAAOF,IAAsB,IAAK;IAC1C,MAAMZ,QAAQ,GAAG,MAAMb,GAAG,CAAC0B,IAAI,CAAC,mBAAmB,EAAED,IAAI,CAAC;IAC1D,OAAOZ,QAAQ,CAACY,IAAI;EACtB,CAAC;EAEDG,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,MAAMf,QAAQ,GAAG,MAAMb,GAAG,CAAC0B,IAAI,CAAC,iBAAiB,CAAC;IAClD,OAAOb,QAAQ,CAACY,IAAI;EACtB,CAAC;EAEDI,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,MAAMhB,QAAQ,GAAG,MAAMb,GAAG,CAAC0B,IAAI,CAAC,kBAAkB,CAAC;IACnD,OAAOb,QAAQ,CAACY,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAMK,OAAO,GAAG;EACrBC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAMlB,QAAQ,GAAG,MAAMb,GAAG,CAACgC,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAOnB,QAAQ,CAACY,IAAI;EACtB,CAAC;EACDQ,aAAa,EAAE,MAAOR,IAAS,IAAK;IAClC,MAAMZ,QAAQ,GAAG,MAAMb,GAAG,CAACkC,GAAG,CAAC,kBAAkB,EAAET,IAAI,CAAC;IACxD,OAAOZ,QAAQ,CAACY,IAAI;EACtB,CAAC;EAEDU,UAAU,EAAE,MAAOC,EAAU,IAAK;IAChC,MAAMvB,QAAQ,GAAG,MAAMb,GAAG,CAACqC,MAAM,CAAC,YAAYD,EAAE,EAAE,CAAC;IACnD,OAAOvB,QAAQ,CAACY,IAAI;EACtB;AACF,CAAC;AAED,eAAezB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}