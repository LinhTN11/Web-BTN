{"ast":null,"code":"import _objectSpread from\"C:/Users/trann/Desktop/jwt-bt/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{userAPI}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const CACHE_DURATION=5*60*1000;// 5 minutes\nconst AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[adminData,setAdminData]=useState({users:[],lastFetched:0});useEffect(()=>{// Check if user is logged in on app start\nconst savedUser=localStorage.getItem('user');const savedToken=localStorage.getItem('token');if(savedUser&&savedToken){const parsedUser=JSON.parse(savedUser);setUser(parsedUser);setToken(savedToken);setIsAuthenticated(true);// If user is admin, preload data\nif(parsedUser.role==='admin'){preloadAdminData();}}},[]);const preloadAdminData=async()=>{try{// Check if cache is still valid\nconst now=Date.now();if(now-adminData.lastFetched<CACHE_DURATION&&adminData.users.length>0){return;}const usersData=await userAPI.getAllUsers();setAdminData({users:usersData,lastFetched:now});}catch(error){console.error('Error preloading admin data:',error);}};const login=async(userData,accessToken)=>{setUser(userData);setToken(accessToken);setIsAuthenticated(true);localStorage.setItem('user',JSON.stringify(userData));localStorage.setItem('token',accessToken);// If user is admin, preload data immediately after login\nif(userData.role==='admin'){await preloadAdminData();}};const logout=()=>{setUser(null);setToken(null);setIsAuthenticated(false);setAdminData({users:[],lastFetched:0});localStorage.removeItem('user');localStorage.removeItem('token');};const updateUser=updatedUserData=>{if(user){const newUser=_objectSpread(_objectSpread({},user),updatedUserData);setUser(newUser);localStorage.setItem('user',JSON.stringify(newUser));}};const refreshUserData=async()=>{if(user&&token){try{const userData=await userAPI.getCurrentUser();updateUser(userData);// If user is admin, refresh admin data too\nif(userData.role==='admin'){await preloadAdminData();}}catch(error){console.error('Error refreshing user data:',error);}}};const getUsers=()=>{return adminData.users;};const refreshUsers=async()=>{if((user===null||user===void 0?void 0:user.role)==='admin'){await preloadAdminData();}};const value={user,isAuthenticated,login,logout,updateUser,token,refreshUserData,getUsers,refreshUsers};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","userAPI","jsx","_jsx","CACHE_DURATION","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","token","setToken","isAuthenticated","setIsAuthenticated","adminData","setAdminData","users","lastFetched","savedUser","localStorage","getItem","savedToken","parsedUser","JSON","parse","role","preloadAdminData","now","Date","length","usersData","getAllUsers","error","console","login","userData","accessToken","setItem","stringify","logout","removeItem","updateUser","updatedUserData","newUser","_objectSpread","refreshUserData","getCurrentUser","getUsers","refreshUsers","value","Provider","useAuth","context","Error"],"sources":["C:/Users/trann/Desktop/jwt-bt/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { User, AuthContextType } from '../types';\r\nimport { userAPI } from '../services/api';\r\n\r\ninterface AdminData {\r\n  users: User[];\r\n  lastFetched: number;\r\n}\r\n\r\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [adminData, setAdminData] = useState<AdminData>({ users: [], lastFetched: 0 });\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    const savedUser = localStorage.getItem('user');\r\n    const savedToken = localStorage.getItem('token');\r\n    \r\n    if (savedUser && savedToken) {\r\n      const parsedUser = JSON.parse(savedUser);\r\n      setUser(parsedUser);\r\n      setToken(savedToken);\r\n      setIsAuthenticated(true);\r\n\r\n      // If user is admin, preload data\r\n      if (parsedUser.role === 'admin') {\r\n        preloadAdminData();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const preloadAdminData = async () => {\r\n    try {\r\n      // Check if cache is still valid\r\n      const now = Date.now();\r\n      if (now - adminData.lastFetched < CACHE_DURATION && adminData.users.length > 0) {\r\n        return;\r\n      }\r\n\r\n      const usersData = await userAPI.getAllUsers();\r\n      setAdminData({\r\n        users: usersData,\r\n        lastFetched: now\r\n      });\r\n    } catch (error) {\r\n      console.error('Error preloading admin data:', error);\r\n    }\r\n  };\r\n\r\n  const login = async (userData: User, accessToken: string) => {\r\n    setUser(userData);\r\n    setToken(accessToken);\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    localStorage.setItem('token', accessToken);\r\n\r\n    // If user is admin, preload data immediately after login\r\n    if (userData.role === 'admin') {\r\n      await preloadAdminData();\r\n    }\r\n  };\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    setIsAuthenticated(false);\r\n    setAdminData({ users: [], lastFetched: 0 });\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n  };\r\n  const updateUser = (updatedUserData: Partial<User>) => {\r\n    if (user) {\r\n      const newUser = { ...user, ...updatedUserData };\r\n      setUser(newUser);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n    }\r\n  };\r\n\r\n  const refreshUserData = async () => {\r\n    if (user && token) {\r\n      try {\r\n        const userData = await userAPI.getCurrentUser();\r\n        updateUser(userData);\r\n\r\n        // If user is admin, refresh admin data too\r\n        if (userData.role === 'admin') {\r\n          await preloadAdminData();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error refreshing user data:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getUsers = () => {\r\n    return adminData.users;\r\n  };\r\n\r\n  const refreshUsers = async () => {\r\n    if (user?.role === 'admin') {\r\n      await preloadAdminData();\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n    token,\r\n    refreshUserData,\r\n    getUsers,\r\n    refreshUsers\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}