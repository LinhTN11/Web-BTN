{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trann\\\\Desktop\\\\jwt-bt\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { userAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [adminData, setAdminData] = useState({\n    users: [],\n    lastFetched: 0\n  });\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const savedUser = localStorage.getItem('user');\n      const savedToken = localStorage.getItem('token');\n      if (savedUser && savedToken) {\n        try {\n          const parsedUser = JSON.parse(savedUser);\n          setUser(parsedUser);\n          setToken(savedToken);\n          setIsAuthenticated(true);\n\n          // Refresh user data in background\n          refreshUserData().catch(console.error);\n        } catch (error) {\n          console.error('Error initializing auth state:', error);\n          // Clear invalid data\n          localStorage.removeItem('user');\n          localStorage.removeItem('token');\n        }\n      }\n    };\n    initializeAuth();\n  }, []);\n  const preloadAdminData = async () => {\n    try {\n      const now = Date.now();\n      if (now - adminData.lastFetched < CACHE_DURATION && adminData.users.length > 0) {\n        return;\n      }\n      const response = await userAPI.getAllUsers();\n      if (response && Array.isArray(response.data)) {\n        setAdminData({\n          users: response.data,\n          lastFetched: now\n        });\n      }\n    } catch (error) {\n      console.error('Error preloading admin data:', error);\n      throw error;\n    }\n  };\n  const login = async (response, accessToken) => {\n    try {\n      // Extract and validate user data\n      const userData = response.user || response;\n      if (!userData._id || !userData.username) {\n        throw new Error('Invalid user data received');\n      }\n\n      // Update auth state\n      setUser(userData);\n      setToken(accessToken);\n      setIsAuthenticated(true);\n\n      // Update localStorage\n      localStorage.setItem('user', JSON.stringify(userData));\n      localStorage.setItem('token', accessToken);\n\n      // Load admin data if needed\n      if (userData.role === 'admin') {\n        await preloadAdminData();\n      }\n\n      // Refresh user data to ensure we have latest info\n      await refreshUserData();\n    } catch (error) {\n      console.error('Error during login:', error);\n      // Cleanup on error\n      setUser(null);\n      setToken(null);\n      setIsAuthenticated(false);\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    setIsAuthenticated(false);\n    setAdminData({\n      users: [],\n      lastFetched: 0\n    });\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n  const refreshUserData = async () => {\n    if (!token) return;\n    try {\n      const response = await userAPI.getCurrentUser();\n      if (response !== null && response !== void 0 && response.data) {\n        const freshUserData = response.data;\n        setUser(freshUserData);\n        localStorage.setItem('user', JSON.stringify(freshUserData));\n        if (freshUserData.role === 'admin') {\n          await preloadAdminData();\n        }\n      }\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Error refreshing user data:', error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n        logout();\n      }\n      throw error;\n    }\n  };\n  const updateUser = updatedUserData => {\n    if (user) {\n      const newUser = {\n        ...user,\n        ...updatedUserData\n      };\n      setUser(newUser);\n      localStorage.setItem('user', JSON.stringify(newUser));\n    }\n  };\n  const getUsers = () => adminData.users;\n  const refreshUsers = async () => {\n    await preloadAdminData();\n    return adminData.users;\n  };\n  const clearCache = () => {\n    setAdminData({\n      users: [],\n      lastFetched: 0\n    });\n  };\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    login,\n    logout,\n    updateUser,\n    refreshUserData,\n    getUsers,\n    refreshUsers,\n    clearCache\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"liOwm4KWqIFsfrgFxemdOKFeXms=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","userAPI","jsxDEV","_jsxDEV","CACHE_DURATION","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","isAuthenticated","setIsAuthenticated","adminData","setAdminData","users","lastFetched","initializeAuth","savedUser","localStorage","getItem","savedToken","parsedUser","JSON","parse","refreshUserData","catch","console","error","removeItem","preloadAdminData","now","Date","length","response","getAllUsers","Array","isArray","data","login","accessToken","userData","_id","username","Error","setItem","stringify","role","logout","getCurrentUser","freshUserData","_error$response","_error$response2","status","updateUser","updatedUserData","newUser","getUsers","refreshUsers","clearCache","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/trann/Desktop/jwt-bt/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { User, AuthContextType } from '../types';\r\nimport { userAPI } from '../services/api';\r\n\r\ninterface AdminData {\r\n  users: User[];\r\n  lastFetched: number;\r\n}\r\n\r\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [adminData, setAdminData] = useState<AdminData>({ users: [], lastFetched: 0 });\r\n\r\n  // Initialize auth state from localStorage\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const savedUser = localStorage.getItem('user');\r\n      const savedToken = localStorage.getItem('token');\r\n      \r\n      if (savedUser && savedToken) {\r\n        try {\r\n          const parsedUser = JSON.parse(savedUser);\r\n          setUser(parsedUser);\r\n          setToken(savedToken);\r\n          setIsAuthenticated(true);\r\n\r\n          // Refresh user data in background\r\n          refreshUserData().catch(console.error);\r\n        } catch (error) {\r\n          console.error('Error initializing auth state:', error);\r\n          // Clear invalid data\r\n          localStorage.removeItem('user');\r\n          localStorage.removeItem('token');\r\n        }\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const preloadAdminData = async () => {\r\n    try {\r\n      const now = Date.now();\r\n      if (now - adminData.lastFetched < CACHE_DURATION && adminData.users.length > 0) {\r\n        return;\r\n      }\r\n\r\n      const response = await userAPI.getAllUsers();\r\n      if (response && Array.isArray(response.data)) {\r\n        setAdminData({\r\n          users: response.data,\r\n          lastFetched: now\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error preloading admin data:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const login = async (response: any, accessToken: string) => {\r\n    try {\r\n      // Extract and validate user data\r\n      const userData = response.user || response;\r\n      if (!userData._id || !userData.username) {\r\n        throw new Error('Invalid user data received');\r\n      }\r\n\r\n      // Update auth state\r\n      setUser(userData);\r\n      setToken(accessToken);\r\n      setIsAuthenticated(true);\r\n\r\n      // Update localStorage\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      localStorage.setItem('token', accessToken);\r\n\r\n      // Load admin data if needed\r\n      if (userData.role === 'admin') {\r\n        await preloadAdminData();\r\n      }\r\n\r\n      // Refresh user data to ensure we have latest info\r\n      await refreshUserData();\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      // Cleanup on error\r\n      setUser(null);\r\n      setToken(null);\r\n      setIsAuthenticated(false);\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('token');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    setIsAuthenticated(false);\r\n    setAdminData({ users: [], lastFetched: 0 });\r\n\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const refreshUserData = async () => {\r\n    if (!token) return;\r\n\r\n    try {\r\n      const response = await userAPI.getCurrentUser();\r\n      if (response?.data) {\r\n        const freshUserData = response.data;\r\n        setUser(freshUserData);\r\n        localStorage.setItem('user', JSON.stringify(freshUserData));\r\n\r\n        if (freshUserData.role === 'admin') {\r\n          await preloadAdminData();\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error refreshing user data:', error);\r\n      if (error.response?.status === 401 || error.response?.status === 403) {\r\n        logout();\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateUser = (updatedUserData: Partial<User>) => {\r\n    if (user) {\r\n      const newUser = { ...user, ...updatedUserData };\r\n      setUser(newUser);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n    }\r\n  };\r\n\r\n  const getUsers = () => adminData.users;\r\n\r\n  const refreshUsers = async () => {\r\n    await preloadAdminData();\r\n    return adminData.users;\r\n  };\r\n\r\n  const clearCache = () => {\r\n    setAdminData({ users: [], lastFetched: 0 });\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    token,\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n    refreshUserData,\r\n    getUsers,\r\n    refreshUsers,\r\n    clearCache\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAExF,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1C,MAAMC,cAAc,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;AAEtC,MAAMC,WAAW,gBAAGR,aAAa,CAA8BS,SAAS,CAAC;AAMzE,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAY;IAAEmB,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAE,CAAC,CAAC;;EAEpF;EACAnB,SAAS,CAAC,MAAM;IACd,MAAMoB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC9C,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAEhD,IAAIF,SAAS,IAAIG,UAAU,EAAE;QAC3B,IAAI;UACF,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACN,SAAS,CAAC;UACxCV,OAAO,CAACc,UAAU,CAAC;UACnBZ,QAAQ,CAACW,UAAU,CAAC;UACpBT,kBAAkB,CAAC,IAAI,CAAC;;UAExB;UACAa,eAAe,CAAC,CAAC,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;QACxC,CAAC,CAAC,OAAOA,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;UACtD;UACAT,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;UAC/BV,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;QAClC;MACF;IACF,CAAC;IAEDZ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;MACtB,IAAIA,GAAG,GAAGlB,SAAS,CAACG,WAAW,GAAGf,cAAc,IAAIY,SAAS,CAACE,KAAK,CAACkB,MAAM,GAAG,CAAC,EAAE;QAC9E;MACF;MAEA,MAAMC,QAAQ,GAAG,MAAMpC,OAAO,CAACqC,WAAW,CAAC,CAAC;MAC5C,IAAID,QAAQ,IAAIE,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAAC,EAAE;QAC5CxB,YAAY,CAAC;UACXC,KAAK,EAAEmB,QAAQ,CAACI,IAAI;UACpBtB,WAAW,EAAEe;QACf,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMW,KAAK,GAAG,MAAAA,CAAOL,QAAa,EAAEM,WAAmB,KAAK;IAC1D,IAAI;MACF;MACA,MAAMC,QAAQ,GAAGP,QAAQ,CAAC3B,IAAI,IAAI2B,QAAQ;MAC1C,IAAI,CAACO,QAAQ,CAACC,GAAG,IAAI,CAACD,QAAQ,CAACE,QAAQ,EAAE;QACvC,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;;MAEA;MACApC,OAAO,CAACiC,QAAQ,CAAC;MACjB/B,QAAQ,CAAC8B,WAAW,CAAC;MACrB5B,kBAAkB,CAAC,IAAI,CAAC;;MAExB;MACAO,YAAY,CAAC0B,OAAO,CAAC,MAAM,EAAEtB,IAAI,CAACuB,SAAS,CAACL,QAAQ,CAAC,CAAC;MACtDtB,YAAY,CAAC0B,OAAO,CAAC,OAAO,EAAEL,WAAW,CAAC;;MAE1C;MACA,IAAIC,QAAQ,CAACM,IAAI,KAAK,OAAO,EAAE;QAC7B,MAAMjB,gBAAgB,CAAC,CAAC;MAC1B;;MAEA;MACA,MAAML,eAAe,CAAC,CAAC;IACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C;MACApB,OAAO,CAAC,IAAI,CAAC;MACbE,QAAQ,CAAC,IAAI,CAAC;MACdE,kBAAkB,CAAC,KAAK,CAAC;MACzBO,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;MAC/BV,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;MAChC,MAAMD,KAAK;IACb;EACF,CAAC;EAED,MAAMoB,MAAM,GAAGA,CAAA,KAAM;IACnBxC,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdE,kBAAkB,CAAC,KAAK,CAAC;IACzBE,YAAY,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAE,CAAC,CAAC;IAE3CG,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/BV,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,MAAMJ,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAAChB,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMyB,QAAQ,GAAG,MAAMpC,OAAO,CAACmD,cAAc,CAAC,CAAC;MAC/C,IAAIf,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEI,IAAI,EAAE;QAClB,MAAMY,aAAa,GAAGhB,QAAQ,CAACI,IAAI;QACnC9B,OAAO,CAAC0C,aAAa,CAAC;QACtB/B,YAAY,CAAC0B,OAAO,CAAC,MAAM,EAAEtB,IAAI,CAACuB,SAAS,CAACI,aAAa,CAAC,CAAC;QAE3D,IAAIA,aAAa,CAACH,IAAI,KAAK,OAAO,EAAE;UAClC,MAAMjB,gBAAgB,CAAC,CAAC;QAC1B;MACF;IACF,CAAC,CAAC,OAAOF,KAAU,EAAE;MAAA,IAAAuB,eAAA,EAAAC,gBAAA;MACnBzB,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,IAAI,EAAAuB,eAAA,GAAAvB,KAAK,CAACM,QAAQ,cAAAiB,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,EAAAD,gBAAA,GAAAxB,KAAK,CAACM,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;QACpEL,MAAM,CAAC,CAAC;MACV;MACA,MAAMpB,KAAK;IACb;EACF,CAAC;EAED,MAAM0B,UAAU,GAAIC,eAA8B,IAAK;IACrD,IAAIhD,IAAI,EAAE;MACR,MAAMiD,OAAO,GAAG;QAAE,GAAGjD,IAAI;QAAE,GAAGgD;MAAgB,CAAC;MAC/C/C,OAAO,CAACgD,OAAO,CAAC;MAChBrC,YAAY,CAAC0B,OAAO,CAAC,MAAM,EAAEtB,IAAI,CAACuB,SAAS,CAACU,OAAO,CAAC,CAAC;IACvD;EACF,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM5C,SAAS,CAACE,KAAK;EAEtC,MAAM2C,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAM5B,gBAAgB,CAAC,CAAC;IACxB,OAAOjB,SAAS,CAACE,KAAK;EACxB,CAAC;EAED,MAAM4C,UAAU,GAAGA,CAAA,KAAM;IACvB7C,YAAY,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAE,CAAC,CAAC;EAC7C,CAAC;EAED,MAAM4C,KAAsB,GAAG;IAC7BrD,IAAI;IACJE,KAAK;IACLE,eAAe;IACf4B,KAAK;IACLS,MAAM;IACNM,UAAU;IACV7B,eAAe;IACfgC,QAAQ;IACRC,YAAY;IACZC;EACF,CAAC;EAED,oBAAO3D,OAAA,CAACE,WAAW,CAAC2D,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAvD,QAAA,EAAEA;EAAQ;IAAAyD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAAC3D,EAAA,CA3JWF,YAAyC;AAAA8D,EAAA,GAAzC9D,YAAyC;AA6JtD,OAAO,MAAM+D,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG1E,UAAU,CAACO,WAAW,CAAC;EACvC,IAAImE,OAAO,KAAKlE,SAAS,EAAE;IACzB,MAAM,IAAIyC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOyB,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAQpB,eAAejE,WAAW;AAAC,IAAAgE,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}