{"ast":null,"code":"import { io } from 'socket.io-client';\nclass SocketService {\n  constructor() {\n    this.socket = null;\n  }\n  connect(token) {\n    if (!this.socket) {\n      this.socket = io(process.env.REACT_APP_API_URL || 'http://localhost:8000', {\n        auth: {\n          token\n        }\n      });\n    }\n    return this.socket;\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n  emit(event, data) {\n    if (this.socket) {\n      this.socket.emit(event, data);\n    }\n  }\n  on(event, callback) {\n    if (this.socket) {\n      this.socket.on(event, callback);\n    }\n  }\n  off(event) {\n    if (this.socket) {\n      this.socket.off(event);\n    }\n  }\n  getSocket() {\n    return this.socket;\n  }\n}\nexport const socketService = new SocketService();\nexport default socketService;","map":{"version":3,"names":["io","SocketService","constructor","socket","connect","token","process","env","REACT_APP_API_URL","auth","disconnect","emit","event","data","on","callback","off","getSocket","socketService"],"sources":["C:/Users/trann/Desktop/jwt-bt/frontend/src/services/socketService.ts"],"sourcesContent":["import { io, Socket } from 'socket.io-client';\r\n\r\nclass SocketService {\r\n  private socket: Socket | null = null;\r\n\r\n  connect(token: string) {\r\n    if (!this.socket) {\r\n      this.socket = io(process.env.REACT_APP_API_URL || 'http://localhost:8000', {\r\n        auth: {\r\n          token\r\n        }\r\n      });\r\n    }\r\n    return this.socket;\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n    }\r\n  }\r\n\r\n  emit(event: string, data: any) {\r\n    if (this.socket) {\r\n      this.socket.emit(event, data);\r\n    }\r\n  }\r\n\r\n  on(event: string, callback: (data: any) => void) {\r\n    if (this.socket) {\r\n      this.socket.on(event, callback);\r\n    }\r\n  }\r\n\r\n  off(event: string) {\r\n    if (this.socket) {\r\n      this.socket.off(event);\r\n    }\r\n  }\r\n\r\n  getSocket() {\r\n    return this.socket;\r\n  }\r\n}\r\n\r\nexport const socketService = new SocketService();\r\nexport default socketService;"],"mappings":"AAAA,SAASA,EAAE,QAAgB,kBAAkB;AAE7C,MAAMC,aAAa,CAAC;EAAAC,YAAA;IAAA,KACVC,MAAM,GAAkB,IAAI;EAAA;EAEpCC,OAAOA,CAACC,KAAa,EAAE;IACrB,IAAI,CAAC,IAAI,CAACF,MAAM,EAAE;MAChB,IAAI,CAACA,MAAM,GAAGH,EAAE,CAACM,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB,EAAE;QACzEC,IAAI,EAAE;UACJJ;QACF;MACF,CAAC,CAAC;IACJ;IACA,OAAO,IAAI,CAACF,MAAM;EACpB;EAEAO,UAAUA,CAAA,EAAG;IACX,IAAI,IAAI,CAACP,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACO,UAAU,CAAC,CAAC;MACxB,IAAI,CAACP,MAAM,GAAG,IAAI;IACpB;EACF;EAEAQ,IAAIA,CAACC,KAAa,EAAEC,IAAS,EAAE;IAC7B,IAAI,IAAI,CAACV,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACQ,IAAI,CAACC,KAAK,EAAEC,IAAI,CAAC;IAC/B;EACF;EAEAC,EAAEA,CAACF,KAAa,EAAEG,QAA6B,EAAE;IAC/C,IAAI,IAAI,CAACZ,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACW,EAAE,CAACF,KAAK,EAAEG,QAAQ,CAAC;IACjC;EACF;EAEAC,GAAGA,CAACJ,KAAa,EAAE;IACjB,IAAI,IAAI,CAACT,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACa,GAAG,CAACJ,KAAK,CAAC;IACxB;EACF;EAEAK,SAASA,CAAA,EAAG;IACV,OAAO,IAAI,CAACd,MAAM;EACpB;AACF;AAEA,OAAO,MAAMe,aAAa,GAAG,IAAIjB,aAAa,CAAC,CAAC;AAChD,eAAeiB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}