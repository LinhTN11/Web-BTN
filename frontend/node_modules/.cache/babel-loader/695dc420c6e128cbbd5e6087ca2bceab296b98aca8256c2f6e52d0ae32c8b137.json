{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trann\\\\Desktop\\\\jwt-bt\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { userAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const savedUser = localStorage.getItem('user');\n    const savedToken = localStorage.getItem('token');\n    if (savedUser && savedToken) {\n      setUser(JSON.parse(savedUser));\n      setToken(savedToken);\n      setIsAuthenticated(true);\n    }\n  }, []);\n  const login = (userData, accessToken) => {\n    setUser(userData);\n    setToken(accessToken);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('token', accessToken);\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n  const updateUser = updatedUserData => {\n    if (user) {\n      const newUser = {\n        ...user,\n        ...updatedUserData\n      };\n      setUser(newUser);\n      localStorage.setItem('user', JSON.stringify(newUser));\n    }\n  };\n  const refreshUserData = async () => {\n    if (user && token) {\n      try {\n        const userData = await userAPI.getCurrentUser();\n        setUser(userData);\n        localStorage.setItem('user', JSON.stringify(userData));\n      } catch (error) {\n        console.error('Failed to refresh user data:', error);\n      }\n    }\n  };\n\n  // Check for user data updates periodically\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      const interval = setInterval(() => {\n        refreshUserData();\n      }, 30000); // Check every 30 seconds\n\n      return () => clearInterval(interval);\n    }\n  }, [isAuthenticated, user === null || user === void 0 ? void 0 : user.email]); // Re-run when email changes\n\n  const value = {\n    user,\n    isAuthenticated,\n    login,\n    logout,\n    updateUser,\n    token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"yTxHSkLxvpgWQ9JlTW/UvN47G90=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","userAPI","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","isAuthenticated","setIsAuthenticated","savedUser","localStorage","getItem","savedToken","JSON","parse","login","userData","accessToken","setItem","stringify","logout","removeItem","updateUser","updatedUserData","newUser","refreshUserData","getCurrentUser","error","console","interval","setInterval","clearInterval","email","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/trann/Desktop/jwt-bt/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { User, AuthContextType } from '../types';\r\nimport { userAPI } from '../services/api';\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    const savedUser = localStorage.getItem('user');\r\n    const savedToken = localStorage.getItem('token');\r\n    \r\n    if (savedUser && savedToken) {\r\n      setUser(JSON.parse(savedUser));\r\n      setToken(savedToken);\r\n      setIsAuthenticated(true);\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData: User, accessToken: string) => {\r\n    setUser(userData);\r\n    setToken(accessToken);\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    localStorage.setItem('token', accessToken);\r\n  };\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n  };\r\n  const updateUser = (updatedUserData: Partial<User>) => {\r\n    if (user) {\r\n      const newUser = { ...user, ...updatedUserData };\r\n      setUser(newUser);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n    }\r\n  };\r\n\r\n  const refreshUserData = async () => {\r\n    if (user && token) {\r\n      try {\r\n        const userData = await userAPI.getCurrentUser();\r\n        setUser(userData);\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n      } catch (error) {\r\n        console.error('Failed to refresh user data:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Check for user data updates periodically\r\n  useEffect(() => {\r\n    if (isAuthenticated && user) {\r\n      const interval = setInterval(() => {\r\n        refreshUserData();\r\n      }, 30000); // Check every 30 seconds\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isAuthenticated, user?.email]); // Re-run when email changes\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n    token\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}