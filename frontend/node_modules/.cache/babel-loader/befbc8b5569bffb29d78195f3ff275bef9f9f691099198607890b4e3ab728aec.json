{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trann\\\\Desktop\\\\jwt-bt\\\\frontend\\\\src\\\\Components\\\\Chat\\\\MessengerChatPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Card, Typography, Input, Button, List, Avatar, Space, Divider, Badge, Row, Col } from 'antd';\nimport { SendOutlined, UserOutlined, MessageOutlined } from '@ant-design/icons';\nimport { useAuth } from '../../contexts/AuthContext';\nimport socketService from '../../services/socketService';\nimport { chatService } from '../../services/chatService';\nimport './MessengerChatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  TextArea\n} = Input;\nconst MessengerChatPage = () => {\n  _s();\n  const {\n    user,\n    token\n  } = useAuth();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [typing, setTyping] = useState({});\n  const typingTimeoutRef = useRef({});\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const loadMessages = useCallback(async userId => {\n    try {\n      const messages = await chatService.getMessages(userId);\n      setMessages(messages);\n      scrollToBottom();\n    } catch (error) {\n      console.error('Error loading messages:', error);\n    }\n  }, []);\n  const loadActiveUsers = useCallback(async () => {\n    try {\n      const users = await chatService.getActiveUsers();\n      setActiveUsers(users);\n    } catch (error) {\n      console.error('Error loading active users:', error);\n    }\n  }, []);\n  useEffect(() => {\n    if (token) {\n      socketService.connect(token);\n      loadActiveUsers();\n      const messageHandler = newMessage => {\n        setMessages(prev => [...prev, newMessage]);\n        scrollToBottom();\n      };\n      const userStatusHandler = async userId => {\n        await loadActiveUsers();\n      };\n      const typingHandler = ({\n        userId,\n        isTyping\n      }) => {\n        setTyping(prev => ({\n          ...prev,\n          [userId]: isTyping\n        }));\n      };\n      const cleanup = [socketService.onMessage(messageHandler), socketService.onUserStatus(userStatusHandler), socketService.onTyping(typingHandler)];\n      return () => {\n        cleanup.forEach(fn => fn());\n        socketService.disconnect();\n      };\n    }\n  }, [token, loadActiveUsers]);\n  useEffect(() => {\n    if (selectedUser) {\n      loadMessages(selectedUser._id);\n    }\n  }, [selectedUser, loadMessages]);\n  const handleSendMessage = async () => {\n    if (!message.trim() || !selectedUser || !(user !== null && user !== void 0 && user._id)) return;\n    try {\n      // Clear typing status\n      if (typingTimeoutRef.current[selectedUser._id]) {\n        clearTimeout(typingTimeoutRef.current[selectedUser._id]);\n      }\n      socketService.sendTypingStatus(selectedUser._id, false);\n\n      // Send message\n      await chatService.sendMessage(selectedUser._id, message.trim());\n      socketService.sendMessage(selectedUser._id, message.trim(), 'text');\n      setMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleTyping = e => {\n    setMessage(e.target.value);\n    if (selectedUser) {\n      // Clear existing timeout\n      if (typingTimeoutRef.current[selectedUser._id]) {\n        clearTimeout(typingTimeoutRef.current[selectedUser._id]);\n      }\n\n      // Send typing status\n      socketService.sendTypingStatus(selectedUser._id, true);\n\n      // Set new timeout\n      typingTimeoutRef.current[selectedUser._id] = setTimeout(() => {\n        socketService.sendTypingStatus(selectedUser._id, false);\n      }, 2000);\n    }\n  };\n  const formatTime = date => {\n    return new Date(date).toLocaleTimeString('vi-VN', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const filteredMessages = selectedUser ? messages.filter(msg => msg.sender === selectedUser._id || msg.sender === (user === null || user === void 0 ? void 0 : user._id) || msg.receiver === selectedUser._id || msg.receiver === (user === null || user === void 0 ? void 0 : user._id)) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messenger-chat-page\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 16,\n      style: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 8,\n        md: 6,\n        lg: 6,\n        xl: 5,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Conversations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this),\n          className: \"users-card\",\n          bodyStyle: {\n            padding: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(List, {\n            dataSource: activeUsers,\n            renderItem: chatUser => /*#__PURE__*/_jsxDEV(List.Item, {\n              className: `user-item ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) === chatUser._id ? 'selected' : ''}`,\n              onClick: () => setSelectedUser(chatUser),\n              children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                avatar: /*#__PURE__*/_jsxDEV(Badge, {\n                  dot: true,\n                  status: chatUser.isOnline ? 'success' : 'default',\n                  offset: [-2, 32],\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 33\n                    }, this),\n                    src: chatUser.avatar,\n                    size: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 23\n                }, this),\n                title: /*#__PURE__*/_jsxDEV(Text, {\n                  strong: true,\n                  children: chatUser.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 28\n                }, this),\n                description: typing[chatUser._id] ? /*#__PURE__*/_jsxDEV(Text, {\n                  type: \"success\",\n                  children: \"Typing...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 25\n                }, this) : chatUser.isOnline ? /*#__PURE__*/_jsxDEV(Text, {\n                  type: \"success\",\n                  children: \"Online\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 25\n                }, this) : chatUser.lastSeen ? /*#__PURE__*/_jsxDEV(Text, {\n                  type: \"secondary\",\n                  children: [\"Last seen at \", formatTime(chatUser.lastSeen)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 25\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 16,\n        md: 18,\n        lg: 18,\n        xl: 19,\n        children: selectedUser ? /*#__PURE__*/_jsxDEV(Card, {\n          className: \"chat-card\",\n          title: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(Badge, {\n              dot: true,\n              status: selectedUser.isOnline ? 'success' : 'default',\n              offset: [-2, 32],\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 29\n                }, this),\n                src: selectedUser.avatar,\n                size: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedUser.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), typing[selectedUser._id] && /*#__PURE__*/_jsxDEV(Text, {\n              type: \"secondary\",\n              italic: true,\n              children: \"typing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this),\n          style: {\n            height: 'calc(100vh - 200px)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-container\",\n            children: [/*#__PURE__*/_jsxDEV(List, {\n              dataSource: filteredMessages,\n              renderItem: msg => /*#__PURE__*/_jsxDEV(List.Item, {\n                className: `message-item ${msg.sender === (user === null || user === void 0 ? void 0 : user._id) ? 'own-message' : 'other-message'}`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-bubble\",\n                    children: /*#__PURE__*/_jsxDEV(Text, {\n                      children: msg.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    type: \"secondary\",\n                    className: \"message-time\",\n                    children: formatTime(msg.timestamp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            style: {\n              margin: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-input-container\",\n            children: /*#__PURE__*/_jsxDEV(Space.Compact, {\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextArea, {\n                value: message,\n                onChange: handleTyping,\n                onKeyPress: handleKeyPress,\n                placeholder: \"Type a message...\",\n                autoSize: {\n                  minRows: 1,\n                  maxRows: 4\n                },\n                style: {\n                  resize: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 27\n                }, this),\n                onClick: handleSendMessage,\n                disabled: !message.trim(),\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          className: \"no-chat-selected\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              padding: '60px 20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {\n              style: {\n                fontSize: '48px',\n                color: '#d9d9d9'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Title, {\n              level: 4,\n              type: \"secondary\",\n              children: \"Select a conversation to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              type: \"secondary\",\n              children: \"Choose from your existing conversations on the left or start a new one.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(MessengerChatPage, \"CqJO/t+BNaAea27Qfp6Ff1dqddo=\", false, function () {\n  return [useAuth];\n});\n_c = MessengerChatPage;\nexport default MessengerChatPage;\nvar _c;\n$RefreshReg$(_c, \"MessengerChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Card","Typography","Input","Button","List","Avatar","Space","Divider","Badge","Row","Col","SendOutlined","UserOutlined","MessageOutlined","useAuth","socketService","chatService","jsxDEV","_jsxDEV","Title","Text","TextArea","MessengerChatPage","_s","user","token","message","setMessage","messages","setMessages","activeUsers","setActiveUsers","selectedUser","setSelectedUser","typing","setTyping","typingTimeoutRef","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadMessages","userId","getMessages","error","console","loadActiveUsers","users","getActiveUsers","connect","messageHandler","newMessage","prev","userStatusHandler","typingHandler","isTyping","cleanup","onMessage","onUserStatus","onTyping","forEach","fn","disconnect","_id","handleSendMessage","trim","clearTimeout","sendTypingStatus","sendMessage","handleKeyPress","e","key","shiftKey","preventDefault","handleTyping","target","value","setTimeout","formatTime","date","Date","toLocaleTimeString","hour","minute","filteredMessages","filter","msg","sender","receiver","className","children","gutter","style","height","xs","sm","md","lg","xl","title","fileName","_jsxFileName","lineNumber","columnNumber","bodyStyle","padding","dataSource","renderItem","chatUser","Item","onClick","Meta","avatar","dot","status","isOnline","offset","icon","src","size","strong","username","description","type","lastSeen","italic","content","timestamp","ref","margin","Compact","width","onChange","onKeyPress","placeholder","autoSize","minRows","maxRows","resize","disabled","textAlign","fontSize","color","level","_c","$RefreshReg$"],"sources":["C:/Users/trann/Desktop/jwt-bt/frontend/src/Components/Chat/MessengerChatPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { \r\n  Card, \r\n  Typography, \r\n  Input, \r\n  Button, \r\n  List, \r\n  Avatar, \r\n  Space,\r\n  Divider,\r\n  Badge,\r\n  Row,\r\n  Col \r\n} from 'antd';\r\nimport { \r\n  SendOutlined, \r\n  UserOutlined,\r\n  MessageOutlined \r\n} from '@ant-design/icons';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport socketService from '../../services/socketService';\r\nimport { chatService, Message, ChatUser } from '../../services/chatService';\r\nimport './MessengerChatPage.css';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst MessengerChatPage: React.FC = () => {\r\n  const { user, token } = useAuth();\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [activeUsers, setActiveUsers] = useState<ChatUser[]>([]);\r\n  const [selectedUser, setSelectedUser] = useState<ChatUser | null>(null);\r\n  const [typing, setTyping] = useState<{ [key: string]: boolean }>({});\r\n  const typingTimeoutRef = useRef<{ [key: string]: NodeJS.Timeout }>({});\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const loadMessages = useCallback(async (userId: string) => {\r\n    try {\r\n      const messages = await chatService.getMessages(userId);\r\n      setMessages(messages);\r\n      scrollToBottom();\r\n    } catch (error) {\r\n      console.error('Error loading messages:', error);\r\n    }\r\n  }, []);\r\n\r\n  const loadActiveUsers = useCallback(async () => {\r\n    try {\r\n      const users = await chatService.getActiveUsers();\r\n      setActiveUsers(users);\r\n    } catch (error) {\r\n      console.error('Error loading active users:', error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      socketService.connect(token);\r\n      loadActiveUsers();\r\n\r\n      const messageHandler = (newMessage: Message) => {\r\n        setMessages(prev => [...prev, newMessage]);\r\n        scrollToBottom();\r\n      };\r\n\r\n      const userStatusHandler = async (userId: string) => {\r\n        await loadActiveUsers();\r\n      };\r\n\r\n      const typingHandler = ({ userId, isTyping }: { userId: string, isTyping: boolean }) => {\r\n        setTyping(prev => ({ ...prev, [userId]: isTyping }));\r\n      };\r\n\r\n      const cleanup = [\r\n        socketService.onMessage(messageHandler),\r\n        socketService.onUserStatus(userStatusHandler),\r\n        socketService.onTyping(typingHandler)\r\n      ];\r\n\r\n      return () => {\r\n        cleanup.forEach(fn => fn());\r\n        socketService.disconnect();\r\n      };\r\n    }\r\n  }, [token, loadActiveUsers]);\r\n\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      loadMessages(selectedUser._id);\r\n    }\r\n  }, [selectedUser, loadMessages]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!message.trim() || !selectedUser || !user?._id) return;\r\n\r\n    try {\r\n      // Clear typing status\r\n      if (typingTimeoutRef.current[selectedUser._id]) {\r\n        clearTimeout(typingTimeoutRef.current[selectedUser._id]);\r\n      }\r\n      socketService.sendTypingStatus(selectedUser._id, false);\r\n\r\n      // Send message\r\n      await chatService.sendMessage(selectedUser._id, message.trim());\r\n      socketService.sendMessage(selectedUser._id, message.trim(), 'text');\r\n      setMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const handleTyping = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setMessage(e.target.value);\r\n    \r\n    if (selectedUser) {\r\n      // Clear existing timeout\r\n      if (typingTimeoutRef.current[selectedUser._id]) {\r\n        clearTimeout(typingTimeoutRef.current[selectedUser._id]);\r\n      }\r\n\r\n      // Send typing status\r\n      socketService.sendTypingStatus(selectedUser._id, true);\r\n\r\n      // Set new timeout\r\n      typingTimeoutRef.current[selectedUser._id] = setTimeout(() => {\r\n        socketService.sendTypingStatus(selectedUser._id, false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const formatTime = (date: Date) => {\r\n    return new Date(date).toLocaleTimeString('vi-VN', { \r\n      hour: '2-digit', \r\n      minute: '2-digit' \r\n    });\r\n  };\r\n\r\n  const filteredMessages = selectedUser \r\n    ? messages.filter(msg => \r\n        msg.sender === selectedUser._id || msg.sender === user?._id ||\r\n        msg.receiver === selectedUser._id || msg.receiver === user?._id\r\n      )\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"messenger-chat-page\">\r\n      <Row gutter={16} style={{ height: '100%' }}>\r\n        <Col xs={24} sm={8} md={6} lg={6} xl={5}>\r\n          <Card \r\n            title={\r\n              <Space>\r\n                <MessageOutlined />\r\n                <span>Conversations</span>\r\n              </Space>\r\n            }\r\n            className=\"users-card\"\r\n            bodyStyle={{ padding: 0 }}\r\n          >\r\n            <List\r\n              dataSource={activeUsers}\r\n              renderItem={(chatUser) => (\r\n                <List.Item\r\n                  className={`user-item ${selectedUser?._id === chatUser._id ? 'selected' : ''}`}\r\n                  onClick={() => setSelectedUser(chatUser)}\r\n                >\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                      <Badge \r\n                        dot \r\n                        status={chatUser.isOnline ? 'success' : 'default'}\r\n                        offset={[-2, 32]}\r\n                      >\r\n                        <Avatar \r\n                          icon={<UserOutlined />} \r\n                          src={chatUser.avatar}\r\n                          size=\"large\"\r\n                        />\r\n                      </Badge>\r\n                    }\r\n                    title={<Text strong>{chatUser.username}</Text>}\r\n                    description={\r\n                      typing[chatUser._id] ? (\r\n                        <Text type=\"success\">Typing...</Text>\r\n                      ) : chatUser.isOnline ? (\r\n                        <Text type=\"success\">Online</Text>\r\n                      ) : chatUser.lastSeen ? (\r\n                        <Text type=\"secondary\">\r\n                          Last seen at {formatTime(chatUser.lastSeen)}\r\n                        </Text>\r\n                      ) : null\r\n                    }\r\n                  />\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col xs={24} sm={16} md={18} lg={18} xl={19}>\r\n          {selectedUser ? (\r\n            <Card\r\n              className=\"chat-card\"\r\n              title={\r\n                <Space>\r\n                  <Badge \r\n                    dot \r\n                    status={selectedUser.isOnline ? 'success' : 'default'}\r\n                    offset={[-2, 32]}\r\n                  >\r\n                    <Avatar \r\n                      icon={<UserOutlined />} \r\n                      src={selectedUser.avatar}\r\n                      size=\"large\"\r\n                    />\r\n                  </Badge>\r\n                  <span>{selectedUser.username}</span>\r\n                  {typing[selectedUser._id] && (\r\n                    <Text type=\"secondary\" italic>typing...</Text>\r\n                  )}\r\n                </Space>\r\n              }\r\n              style={{\r\n                height: 'calc(100vh - 200px)'\r\n              }}\r\n            >\r\n              <div className=\"messages-container\">\r\n                <List\r\n                  dataSource={filteredMessages}\r\n                  renderItem={(msg) => (\r\n                    <List.Item\r\n                      className={`message-item ${\r\n                        msg.sender === user?._id ? 'own-message' : 'other-message'\r\n                      }`}\r\n                    >\r\n                      <div className=\"message-content\">\r\n                        <div className=\"message-bubble\">\r\n                          <Text>{msg.content}</Text>\r\n                        </div>\r\n                        <Text type=\"secondary\" className=\"message-time\">\r\n                          {formatTime(msg.timestamp)}\r\n                        </Text>\r\n                      </div>\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n\r\n              <Divider style={{ margin: 0 }} />\r\n\r\n              <div className=\"message-input-container\">\r\n                <Space.Compact style={{ width: '100%' }}>\r\n                  <TextArea\r\n                    value={message}\r\n                    onChange={handleTyping}\r\n                    onKeyPress={handleKeyPress}\r\n                    placeholder=\"Type a message...\"\r\n                    autoSize={{ minRows: 1, maxRows: 4 }}\r\n                    style={{ resize: 'none' }}\r\n                  />\r\n                  <Button\r\n                    type=\"primary\"\r\n                    icon={<SendOutlined />}\r\n                    onClick={handleSendMessage}\r\n                    disabled={!message.trim()}\r\n                  >\r\n                    Send\r\n                  </Button>\r\n                </Space.Compact>\r\n              </div>\r\n            </Card>\r\n          ) : (\r\n            <Card className=\"no-chat-selected\">\r\n              <div style={{ textAlign: 'center', padding: '60px 20px' }}>\r\n                <MessageOutlined style={{ fontSize: '48px', color: '#d9d9d9' }} />\r\n                <Title level={4} type=\"secondary\">Select a conversation to start chatting</Title>\r\n                <Text type=\"secondary\">\r\n                  Choose from your existing conversations on the left or start a new one.\r\n                </Text>\r\n              </div>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessengerChatPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,SACEC,IAAI,EACJC,UAAU,EACVC,KAAK,EACLC,MAAM,EACNC,IAAI,EACJC,MAAM,EACNC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,GAAG,EACHC,GAAG,QACE,MAAM;AACb,SACEC,YAAY,EACZC,YAAY,EACZC,eAAe,QACV,mBAAmB;AAC1B,SAASC,OAAO,QAAQ,4BAA4B;AACpD,OAAOC,aAAa,MAAM,8BAA8B;AACxD,SAASC,WAAW,QAA2B,4BAA4B;AAC3E,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAM;EAAEC,KAAK;EAAEC;AAAK,CAAC,GAAGnB,UAAU;AAClC,MAAM;EAAEoB;AAAS,CAAC,GAAGnB,KAAK;AAE1B,MAAMoB,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGX,OAAO,CAAC,CAAC;EACjC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAa,EAAE,CAAC;EAC9D,MAAM,CAACoC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAkB,IAAI,CAAC;EACvE,MAAM,CAACsC,MAAM,EAAEC,SAAS,CAAC,GAAGvC,QAAQ,CAA6B,CAAC,CAAC,CAAC;EACpE,MAAMwC,gBAAgB,GAAGrC,MAAM,CAAoC,CAAC,CAAC,CAAC;EACtE,MAAMsC,cAAc,GAAGtC,MAAM,CAAiB,IAAI,CAAC;EAEnD,MAAMuC,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAF,cAAc,CAACG,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,YAAY,GAAG7C,WAAW,CAAC,MAAO8C,MAAc,IAAK;IACzD,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAMZ,WAAW,CAAC6B,WAAW,CAACD,MAAM,CAAC;MACtDf,WAAW,CAACD,QAAQ,CAAC;MACrBU,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAGlD,WAAW,CAAC,YAAY;IAC9C,IAAI;MACF,MAAMmD,KAAK,GAAG,MAAMjC,WAAW,CAACkC,cAAc,CAAC,CAAC;MAChDnB,cAAc,CAACkB,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC,EAAE,EAAE,CAAC;EAENjD,SAAS,CAAC,MAAM;IACd,IAAI4B,KAAK,EAAE;MACTV,aAAa,CAACoC,OAAO,CAAC1B,KAAK,CAAC;MAC5BuB,eAAe,CAAC,CAAC;MAEjB,MAAMI,cAAc,GAAIC,UAAmB,IAAK;QAC9CxB,WAAW,CAACyB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,UAAU,CAAC,CAAC;QAC1Cf,cAAc,CAAC,CAAC;MAClB,CAAC;MAED,MAAMiB,iBAAiB,GAAG,MAAOX,MAAc,IAAK;QAClD,MAAMI,eAAe,CAAC,CAAC;MACzB,CAAC;MAED,MAAMQ,aAAa,GAAGA,CAAC;QAAEZ,MAAM;QAAEa;MAAgD,CAAC,KAAK;QACrFtB,SAAS,CAACmB,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACV,MAAM,GAAGa;QAAS,CAAC,CAAC,CAAC;MACtD,CAAC;MAED,MAAMC,OAAO,GAAG,CACd3C,aAAa,CAAC4C,SAAS,CAACP,cAAc,CAAC,EACvCrC,aAAa,CAAC6C,YAAY,CAACL,iBAAiB,CAAC,EAC7CxC,aAAa,CAAC8C,QAAQ,CAACL,aAAa,CAAC,CACtC;MAED,OAAO,MAAM;QACXE,OAAO,CAACI,OAAO,CAACC,EAAE,IAAIA,EAAE,CAAC,CAAC,CAAC;QAC3BhD,aAAa,CAACiD,UAAU,CAAC,CAAC;MAC5B,CAAC;IACH;EACF,CAAC,EAAE,CAACvC,KAAK,EAAEuB,eAAe,CAAC,CAAC;EAE5BnD,SAAS,CAAC,MAAM;IACd,IAAImC,YAAY,EAAE;MAChBW,YAAY,CAACX,YAAY,CAACiC,GAAG,CAAC;IAChC;EACF,CAAC,EAAE,CAACjC,YAAY,EAAEW,YAAY,CAAC,CAAC;EAEhC,MAAMuB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACxC,OAAO,CAACyC,IAAI,CAAC,CAAC,IAAI,CAACnC,YAAY,IAAI,EAACR,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEyC,GAAG,GAAE;IAEpD,IAAI;MACF;MACA,IAAI7B,gBAAgB,CAACI,OAAO,CAACR,YAAY,CAACiC,GAAG,CAAC,EAAE;QAC9CG,YAAY,CAAChC,gBAAgB,CAACI,OAAO,CAACR,YAAY,CAACiC,GAAG,CAAC,CAAC;MAC1D;MACAlD,aAAa,CAACsD,gBAAgB,CAACrC,YAAY,CAACiC,GAAG,EAAE,KAAK,CAAC;;MAEvD;MACA,MAAMjD,WAAW,CAACsD,WAAW,CAACtC,YAAY,CAACiC,GAAG,EAAEvC,OAAO,CAACyC,IAAI,CAAC,CAAC,CAAC;MAC/DpD,aAAa,CAACuD,WAAW,CAACtC,YAAY,CAACiC,GAAG,EAAEvC,OAAO,CAACyC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC;MACnExC,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMyB,cAAc,GAAIC,CAAsB,IAAK;IACjD,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;MACpCF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClBT,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EAED,MAAMU,YAAY,GAAIJ,CAAyC,IAAK;IAClE7C,UAAU,CAAC6C,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC;IAE1B,IAAI9C,YAAY,EAAE;MAChB;MACA,IAAII,gBAAgB,CAACI,OAAO,CAACR,YAAY,CAACiC,GAAG,CAAC,EAAE;QAC9CG,YAAY,CAAChC,gBAAgB,CAACI,OAAO,CAACR,YAAY,CAACiC,GAAG,CAAC,CAAC;MAC1D;;MAEA;MACAlD,aAAa,CAACsD,gBAAgB,CAACrC,YAAY,CAACiC,GAAG,EAAE,IAAI,CAAC;;MAEtD;MACA7B,gBAAgB,CAACI,OAAO,CAACR,YAAY,CAACiC,GAAG,CAAC,GAAGc,UAAU,CAAC,MAAM;QAC5DhE,aAAa,CAACsD,gBAAgB,CAACrC,YAAY,CAACiC,GAAG,EAAE,KAAK,CAAC;MACzD,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,MAAMe,UAAU,GAAIC,IAAU,IAAK;IACjC,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;MAChDC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAGtD,YAAY,GACjCJ,QAAQ,CAAC2D,MAAM,CAACC,GAAG,IACjBA,GAAG,CAACC,MAAM,KAAKzD,YAAY,CAACiC,GAAG,IAAIuB,GAAG,CAACC,MAAM,MAAKjE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEyC,GAAG,KAC3DuB,GAAG,CAACE,QAAQ,KAAK1D,YAAY,CAACiC,GAAG,IAAIuB,GAAG,CAACE,QAAQ,MAAKlE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEyC,GAAG,CACjE,CAAC,GACD,EAAE;EAEN,oBACE/C,OAAA;IAAKyE,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClC1E,OAAA,CAACT,GAAG;MAACoF,MAAM,EAAE,EAAG;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAH,QAAA,gBACzC1E,OAAA,CAACR,GAAG;QAACsF,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAR,QAAA,eACtC1E,OAAA,CAAClB,IAAI;UACHqG,KAAK,eACHnF,OAAA,CAACZ,KAAK;YAAAsF,QAAA,gBACJ1E,OAAA,CAACL,eAAe;cAAAyF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACnBvF,OAAA;cAAA0E,QAAA,EAAM;YAAa;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CACR;UACDd,SAAS,EAAC,YAAY;UACtBe,SAAS,EAAE;YAAEC,OAAO,EAAE;UAAE,CAAE;UAAAf,QAAA,eAE1B1E,OAAA,CAACd,IAAI;YACHwG,UAAU,EAAE9E,WAAY;YACxB+E,UAAU,EAAGC,QAAQ,iBACnB5F,OAAA,CAACd,IAAI,CAAC2G,IAAI;cACRpB,SAAS,EAAE,aAAa,CAAA3D,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEiC,GAAG,MAAK6C,QAAQ,CAAC7C,GAAG,GAAG,UAAU,GAAG,EAAE,EAAG;cAC/E+C,OAAO,EAAEA,CAAA,KAAM/E,eAAe,CAAC6E,QAAQ,CAAE;cAAAlB,QAAA,eAEzC1E,OAAA,CAACd,IAAI,CAAC2G,IAAI,CAACE,IAAI;gBACbC,MAAM,eACJhG,OAAA,CAACV,KAAK;kBACJ2G,GAAG;kBACHC,MAAM,EAAEN,QAAQ,CAACO,QAAQ,GAAG,SAAS,GAAG,SAAU;kBAClDC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAE;kBAAA1B,QAAA,eAEjB1E,OAAA,CAACb,MAAM;oBACLkH,IAAI,eAAErG,OAAA,CAACN,YAAY;sBAAA0F,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAE;oBACvBe,GAAG,EAAEV,QAAQ,CAACI,MAAO;oBACrBO,IAAI,EAAC;kBAAO;oBAAAnB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACb;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACG,CACR;gBACDJ,KAAK,eAAEnF,OAAA,CAACE,IAAI;kBAACsG,MAAM;kBAAA9B,QAAA,EAAEkB,QAAQ,CAACa;gBAAQ;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAE;gBAC/CmB,WAAW,EACT1F,MAAM,CAAC4E,QAAQ,CAAC7C,GAAG,CAAC,gBAClB/C,OAAA,CAACE,IAAI;kBAACyG,IAAI,EAAC,SAAS;kBAAAjC,QAAA,EAAC;gBAAS;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,GACnCK,QAAQ,CAACO,QAAQ,gBACnBnG,OAAA,CAACE,IAAI;kBAACyG,IAAI,EAAC,SAAS;kBAAAjC,QAAA,EAAC;gBAAM;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,GAChCK,QAAQ,CAACgB,QAAQ,gBACnB5G,OAAA,CAACE,IAAI;kBAACyG,IAAI,EAAC,WAAW;kBAAAjC,QAAA,GAAC,eACR,EAACZ,UAAU,CAAC8B,QAAQ,CAACgB,QAAQ,CAAC;gBAAA;kBAAAxB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvC,CAAC,GACL;cACL;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO;UACX;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAENvF,OAAA,CAACR,GAAG;QAACsF,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,EAAG;QAAAR,QAAA,EACzC5D,YAAY,gBACXd,OAAA,CAAClB,IAAI;UACH2F,SAAS,EAAC,WAAW;UACrBU,KAAK,eACHnF,OAAA,CAACZ,KAAK;YAAAsF,QAAA,gBACJ1E,OAAA,CAACV,KAAK;cACJ2G,GAAG;cACHC,MAAM,EAAEpF,YAAY,CAACqF,QAAQ,GAAG,SAAS,GAAG,SAAU;cACtDC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAE;cAAA1B,QAAA,eAEjB1E,OAAA,CAACb,MAAM;gBACLkH,IAAI,eAAErG,OAAA,CAACN,YAAY;kBAAA0F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBACvBe,GAAG,EAAExF,YAAY,CAACkF,MAAO;gBACzBO,IAAI,EAAC;cAAO;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACb;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC,eACRvF,OAAA;cAAA0E,QAAA,EAAO5D,YAAY,CAAC2F;YAAQ;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EACnCvE,MAAM,CAACF,YAAY,CAACiC,GAAG,CAAC,iBACvB/C,OAAA,CAACE,IAAI;cAACyG,IAAI,EAAC,WAAW;cAACE,MAAM;cAAAnC,QAAA,EAAC;YAAS;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAC9C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CACR;UACDX,KAAK,EAAE;YACLC,MAAM,EAAE;UACV,CAAE;UAAAH,QAAA,gBAEF1E,OAAA;YAAKyE,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjC1E,OAAA,CAACd,IAAI;cACHwG,UAAU,EAAEtB,gBAAiB;cAC7BuB,UAAU,EAAGrB,GAAG,iBACdtE,OAAA,CAACd,IAAI,CAAC2G,IAAI;gBACRpB,SAAS,EAAE,gBACTH,GAAG,CAACC,MAAM,MAAKjE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEyC,GAAG,IAAG,aAAa,GAAG,eAAe,EACzD;gBAAA2B,QAAA,eAEH1E,OAAA;kBAAKyE,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,gBAC9B1E,OAAA;oBAAKyE,SAAS,EAAC,gBAAgB;oBAAAC,QAAA,eAC7B1E,OAAA,CAACE,IAAI;sBAAAwE,QAAA,EAAEJ,GAAG,CAACwC;oBAAO;sBAAA1B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACvB,CAAC,eACNvF,OAAA,CAACE,IAAI;oBAACyG,IAAI,EAAC,WAAW;oBAAClC,SAAS,EAAC,cAAc;oBAAAC,QAAA,EAC5CZ,UAAU,CAACQ,GAAG,CAACyC,SAAS;kBAAC;oBAAA3B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG;YACX;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACFvF,OAAA;cAAKgH,GAAG,EAAE7F;YAAe;cAAAiE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eAENvF,OAAA,CAACX,OAAO;YAACuF,KAAK,EAAE;cAAEqC,MAAM,EAAE;YAAE;UAAE;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAEjCvF,OAAA;YAAKyE,SAAS,EAAC,yBAAyB;YAAAC,QAAA,eACtC1E,OAAA,CAACZ,KAAK,CAAC8H,OAAO;cAACtC,KAAK,EAAE;gBAAEuC,KAAK,EAAE;cAAO,CAAE;cAAAzC,QAAA,gBACtC1E,OAAA,CAACG,QAAQ;gBACPyD,KAAK,EAAEpD,OAAQ;gBACf4G,QAAQ,EAAE1D,YAAa;gBACvB2D,UAAU,EAAEhE,cAAe;gBAC3BiE,WAAW,EAAC,mBAAmB;gBAC/BC,QAAQ,EAAE;kBAAEC,OAAO,EAAE,CAAC;kBAAEC,OAAO,EAAE;gBAAE,CAAE;gBACrC7C,KAAK,EAAE;kBAAE8C,MAAM,EAAE;gBAAO;cAAE;gBAAAtC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC,eACFvF,OAAA,CAACf,MAAM;gBACL0H,IAAI,EAAC,SAAS;gBACdN,IAAI,eAAErG,OAAA,CAACP,YAAY;kBAAA2F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBACvBO,OAAO,EAAE9C,iBAAkB;gBAC3B2E,QAAQ,EAAE,CAACnH,OAAO,CAACyC,IAAI,CAAC,CAAE;gBAAAyB,QAAA,EAC3B;cAED;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,gBAEPvF,OAAA,CAAClB,IAAI;UAAC2F,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAChC1E,OAAA;YAAK4E,KAAK,EAAE;cAAEgD,SAAS,EAAE,QAAQ;cAAEnC,OAAO,EAAE;YAAY,CAAE;YAAAf,QAAA,gBACxD1E,OAAA,CAACL,eAAe;cAACiF,KAAK,EAAE;gBAAEiD,QAAQ,EAAE,MAAM;gBAAEC,KAAK,EAAE;cAAU;YAAE;cAAA1C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAClEvF,OAAA,CAACC,KAAK;cAAC8H,KAAK,EAAE,CAAE;cAACpB,IAAI,EAAC,WAAW;cAAAjC,QAAA,EAAC;YAAuC;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjFvF,OAAA,CAACE,IAAI;cAACyG,IAAI,EAAC,WAAW;cAAAjC,QAAA,EAAC;YAEvB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClF,EAAA,CA/QID,iBAA2B;EAAA,QACPR,OAAO;AAAA;AAAAoI,EAAA,GAD3B5H,iBAA2B;AAiRjC,eAAeA,iBAAiB;AAAC,IAAA4H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}